"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const DropdownToggle_1 = __importDefault(require("reactstrap/lib/DropdownToggle"));
const DropdownMenu_1 = __importDefault(require("reactstrap/lib/DropdownMenu"));
const HelpDropdownItem_1 = require("./HelpDropdownItem");
const DropdownItem_1 = __importDefault(require("reactstrap/lib/DropdownItem"));
const reactstrap_1 = require("reactstrap");
const AppRuntime_1 = require("../../../../web/js/AppRuntime");
const TrackedDropdownItem_1 = require("./TrackedDropdownItem");
const electron_1 = require("electron");
const AppUpdates_1 = require("../../../../web/js/updates/AppUpdates");
const SURVEY_LINK = 'https://kevinburton1.typeform.com/to/BuX1Ef';
class HelpDropdown extends React.PureComponent {
    constructor(props, context) {
        super(props, context);
    }
    render() {
        const updatesEnabled = AppRuntime_1.AppRuntime.isElectron() && AppUpdates_1.AppUpdates.platformSupportsUpdates();
        return (React.createElement(reactstrap_1.UncontrolledDropdown, { className: "ml-1", size: "sm", id: "help-dropdown" },
            React.createElement(DropdownToggle_1.default, { className: "text-muted", color: "light", caret: true },
                React.createElement("i", { className: "fas fa-question", style: { fontSize: '17px' } })),
            React.createElement(DropdownMenu_1.default, { className: "shadow", right: true },
                React.createElement(HelpDropdownItem_1.HelpDropdownItem, { id: "documentation-link", title: "Documentation", tooltip: "Documentation on Polar", link: "https://getpolarized.io/docs/", icon: "fas fa-book" }),
                React.createElement(HelpDropdownItem_1.HelpDropdownItem, { id: "feedback-link", title: "Feedback", tooltip: "Provide feedback to help us improve the App", link: SURVEY_LINK, icon: "fas fa-poll-h" }),
                React.createElement(HelpDropdownItem_1.HelpDropdownItem, { id: "chat-link", title: "Chat", tooltip: "Chat with other Polar users live via chat (Discord)", link: "https://discord.gg/GT8MhA6", icon: "fab fa-discord" }),
                React.createElement(HelpDropdownItem_1.HelpDropdownItem, { id: "create-issue-link", title: "Create Issue", tooltip: "Create an issue (bug or feature) for the developer to investigate.", link: "https://github.com/burtonator/polar-bookshelf/issues/new/choose", icon: "fas fa-bug" }),
                React.createElement(DropdownItem_1.default, { divider: true }),
                React.createElement(HelpDropdownItem_1.HelpDropdownItem, { id: "donate-link", title: "Donate", tooltip: "Donate to Polar to support development.", link: "https://opencollective.com/polar-bookshelf", icon: "fas fa-donate" }),
                React.createElement(DropdownItem_1.default, { divider: true, hidden: !updatesEnabled }),
                React.createElement(TrackedDropdownItem_1.TrackedDropdownItem, { id: "electron-check-for-update", title: "Check For App Update", tooltip: "Check for a new update of the Polar Desktop app.", icon: "fas fa-file-download", trackingCategory: "help-check-for-update", hidden: !updatesEnabled, onClick: () => electron_1.ipcRenderer.send('app-update:check-for-update') }))));
    }
}
exports.HelpDropdown = HelpDropdown;
//# sourceMappingURL=data:application/json;base64,