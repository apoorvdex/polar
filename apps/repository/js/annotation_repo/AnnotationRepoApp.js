"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Logger_1 = require("../../../../web/js/logger/Logger");
const RepoDocMetaLoader_1 = require("../RepoDocMetaLoader");
const RepoDocMetaManager_1 = require("../RepoDocMetaManager");
const FilteredTags_1 = require("../FilteredTags");
const AnnotationRepoTable_1 = __importDefault(require("./AnnotationRepoTable"));
const RepoHeader_1 = require("../repo_header/RepoHeader");
const MessageBanner_1 = require("../MessageBanner");
const RepoAnnotationMetaView_1 = require("./RepoAnnotationMetaView");
const FixedNav_1 = require("../FixedNav");
const log = Logger_1.Logger.create();
class AnnotationRepoApp extends React.Component {
    constructor(props, context) {
        super(props, context);
        this.filteredTags = new FilteredTags_1.FilteredTags();
        this.persistenceLayerManager = this.props.persistenceLayerManager;
        this.docRepository = new RepoDocMetaManager_1.RepoDocMetaManager(this.persistenceLayerManager);
        this.repoDocInfoLoader = new RepoDocMetaLoader_1.RepoDocMetaLoader(this.persistenceLayerManager);
        this.state = {};
    }
    render() {
        return (React.createElement(FixedNav_1.FixedNav, { id: "doc-repository", className: "annotations-view" },
            React.createElement("header", null,
                React.createElement(RepoHeader_1.RepoHeader, { persistenceLayerManager: this.props.persistenceLayerManager }),
                React.createElement(MessageBanner_1.MessageBanner, null)),
            React.createElement(FixedNav_1.FixedNavBody, null,
                React.createElement("div", { style: { display: 'flex' } },
                    React.createElement("div", { style: { width: 'calc(100% - 350px)' } },
                        React.createElement(AnnotationRepoTable_1.default, { persistenceLayerManager: this.props.persistenceLayerManager, updatedDocInfoEventDispatcher: this.props.updatedDocInfoEventDispatcher, repoDocMetaManager: this.props.repoDocMetaManager, repoDocMetaLoader: this.props.repoDocMetaLoader, onSelected: repoAnnotation => this.onRepoAnnotationSelected(repoAnnotation) })),
                    React.createElement("div", { className: "mt-2", style: { width: '350px' } },
                        React.createElement(RepoAnnotationMetaView_1.RepoAnnotationMetaView, { persistenceLayerManager: this.props.persistenceLayerManager, repoAnnotation: this.state.repoAnnotation }))))));
    }
    onRepoAnnotationSelected(repoAnnotation) {
        this.setState({ repoAnnotation });
    }
}
exports.default = AnnotationRepoApp;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5ub3RhdGlvblJlcG9BcHAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBbm5vdGF0aW9uUmVwb0FwcC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQStCO0FBQy9CLDZEQUF3RDtBQUN4RCw0REFBdUQ7QUFDdkQsOERBQXlEO0FBQ3pELGtEQUE2QztBQUs3QyxnRkFBd0Q7QUFFeEQsMERBQXFEO0FBQ3JELG9EQUErQztBQUUvQyxxRUFBZ0U7QUFJaEUsMENBQW1EO0FBRW5ELE1BQU0sR0FBRyxHQUFHLGVBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUU1QixNQUFxQixpQkFBa0IsU0FBUSxLQUFLLENBQUMsU0FBeUI7SUFVMUUsWUFBWSxLQUFhLEVBQUUsT0FBWTtRQUNuQyxLQUFLLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBSFQsaUJBQVksR0FBRyxJQUFJLDJCQUFZLEVBQUUsQ0FBQztRQUsvQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQztRQUNsRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksdUNBQWtCLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDMUUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUkscUNBQWlCLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFFN0UsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUNaLENBQUM7SUFFTixDQUFDO0lBRU0sTUFBTTtRQUVULE9BQU8sQ0FFSCxvQkFBQyxtQkFBUSxJQUFDLEVBQUUsRUFBQyxnQkFBZ0IsRUFBQyxTQUFTLEVBQUMsa0JBQWtCO1lBRXREO2dCQUNJLG9CQUFDLHVCQUFVLElBQUMsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsR0FBRztnQkFFMUUsb0JBQUMsNkJBQWEsT0FBRSxDQUNYO1lBRVQsb0JBQUMsdUJBQVk7Z0JBRVQsNkJBQUssS0FBSyxFQUFFLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBQztvQkFFekIsNkJBQUssS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLG9CQUFvQixFQUFDO3dCQUVyQyxvQkFBQyw2QkFBbUIsSUFBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLHVCQUF1QixFQUMzRCw2QkFBNkIsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLDZCQUE2QixFQUN2RSxrQkFBa0IsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUNqRCxpQkFBaUIsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUMvQyxVQUFVLEVBQUUsY0FBYyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FFakc7b0JBRU4sNkJBQUssU0FBUyxFQUFDLE1BQU0sRUFBQyxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsT0FBTyxFQUFDO3dCQUN6QyxvQkFBQywrQ0FBc0IsSUFBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLHVCQUF1QixFQUMzRCxjQUFjLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLEdBQUcsQ0FDbEUsQ0FHSixDQUVLLENBRVIsQ0FFZCxDQUFDO0lBQ04sQ0FBQztJQUVPLHdCQUF3QixDQUFDLGNBQThCO1FBRzNELElBQUksQ0FBQyxRQUFRLENBQUMsRUFBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDO0lBRXBDLENBQUM7Q0FFSjtBQXRFRCxvQ0FzRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0xvZ2dlcn0gZnJvbSAnLi4vLi4vLi4vLi4vd2ViL2pzL2xvZ2dlci9Mb2dnZXInO1xuaW1wb3J0IHtSZXBvRG9jTWV0YUxvYWRlcn0gZnJvbSAnLi4vUmVwb0RvY01ldGFMb2FkZXInO1xuaW1wb3J0IHtSZXBvRG9jTWV0YU1hbmFnZXJ9IGZyb20gJy4uL1JlcG9Eb2NNZXRhTWFuYWdlcic7XG5pbXBvcnQge0ZpbHRlcmVkVGFnc30gZnJvbSAnLi4vRmlsdGVyZWRUYWdzJztcbmltcG9ydCB7SURvY0luZm99IGZyb20gJy4uLy4uLy4uLy4uL3dlYi9qcy9tZXRhZGF0YS9Eb2NJbmZvJztcbmltcG9ydCB7U3luY0JhclByb2dyZXNzfSBmcm9tICcuLi8uLi8uLi8uLi93ZWIvanMvdWkvc3luY19iYXIvU3luY0Jhcic7XG5pbXBvcnQge0lFdmVudERpc3BhdGNoZXJ9IGZyb20gJy4uLy4uLy4uLy4uL3dlYi9qcy9yZWFjdG9yL1NpbXBsZVJlYWN0b3InO1xuaW1wb3J0IHtQZXJzaXN0ZW5jZUxheWVyTWFuYWdlcn0gZnJvbSAnLi4vLi4vLi4vLi4vd2ViL2pzL2RhdGFzdG9yZS9QZXJzaXN0ZW5jZUxheWVyTWFuYWdlcic7XG5pbXBvcnQgQW5ub3RhdGlvblJlcG9UYWJsZSBmcm9tICcuL0Fubm90YXRpb25SZXBvVGFibGUnO1xuaW1wb3J0IHtGb290ZXIsIFRpcHN9IGZyb20gJy4uL1V0aWxzJztcbmltcG9ydCB7UmVwb0hlYWRlcn0gZnJvbSAnLi4vcmVwb19oZWFkZXIvUmVwb0hlYWRlcic7XG5pbXBvcnQge01lc3NhZ2VCYW5uZXJ9IGZyb20gJy4uL01lc3NhZ2VCYW5uZXInO1xuaW1wb3J0IHtSZXBvQW5ub3RhdGlvbn0gZnJvbSAnLi4vUmVwb0Fubm90YXRpb24nO1xuaW1wb3J0IHtSZXBvQW5ub3RhdGlvbk1ldGFWaWV3fSBmcm9tICcuL1JlcG9Bbm5vdGF0aW9uTWV0YVZpZXcnO1xuaW1wb3J0IHtTcGxpdEJhciwgU3BsaXRCYXJMZWZ0LCBTcGxpdEJhclJpZ2h0fSBmcm9tICcuLi9TcGxpdEJhcic7XG5pbXBvcnQge1JlcG9TaWRlYmFyfSBmcm9tICcuLi9SZXBvU2lkZWJhcic7XG5pbXBvcnQge0Nsb3VkQXV0aEJ1dHRvbn0gZnJvbSAnLi4vLi4vLi4vLi4vd2ViL2pzL3VpL2Nsb3VkX2F1dGgvQ2xvdWRBdXRoQnV0dG9uJztcbmltcG9ydCB7Rml4ZWROYXYsIEZpeGVkTmF2Qm9keX0gZnJvbSAnLi4vRml4ZWROYXYnO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFubm90YXRpb25SZXBvQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PElQcm9wcywgSVN0YXRlPiB7XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IHBlcnNpc3RlbmNlTGF5ZXJNYW5hZ2VyOiBQZXJzaXN0ZW5jZUxheWVyTWFuYWdlcjtcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgZG9jUmVwb3NpdG9yeTogUmVwb0RvY01ldGFNYW5hZ2VyO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSByZXBvRG9jSW5mb0xvYWRlcjogUmVwb0RvY01ldGFMb2FkZXI7XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IGZpbHRlcmVkVGFncyA9IG5ldyBGaWx0ZXJlZFRhZ3MoKTtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBJUHJvcHMsIGNvbnRleHQ6IGFueSkge1xuICAgICAgICBzdXBlcihwcm9wcywgY29udGV4dCk7XG5cbiAgICAgICAgdGhpcy5wZXJzaXN0ZW5jZUxheWVyTWFuYWdlciA9IHRoaXMucHJvcHMucGVyc2lzdGVuY2VMYXllck1hbmFnZXI7XG4gICAgICAgIHRoaXMuZG9jUmVwb3NpdG9yeSA9IG5ldyBSZXBvRG9jTWV0YU1hbmFnZXIodGhpcy5wZXJzaXN0ZW5jZUxheWVyTWFuYWdlcik7XG4gICAgICAgIHRoaXMucmVwb0RvY0luZm9Mb2FkZXIgPSBuZXcgUmVwb0RvY01ldGFMb2FkZXIodGhpcy5wZXJzaXN0ZW5jZUxheWVyTWFuYWdlcik7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcblxuICAgIH1cblxuICAgIHB1YmxpYyByZW5kZXIoKSB7XG5cbiAgICAgICAgcmV0dXJuIChcblxuICAgICAgICAgICAgPEZpeGVkTmF2IGlkPVwiZG9jLXJlcG9zaXRvcnlcIiBjbGFzc05hbWU9XCJhbm5vdGF0aW9ucy12aWV3XCI+XG5cbiAgICAgICAgICAgICAgICA8aGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICA8UmVwb0hlYWRlciBwZXJzaXN0ZW5jZUxheWVyTWFuYWdlcj17dGhpcy5wcm9wcy5wZXJzaXN0ZW5jZUxheWVyTWFuYWdlcn0vPlxuXG4gICAgICAgICAgICAgICAgICAgIDxNZXNzYWdlQmFubmVyLz5cbiAgICAgICAgICAgICAgICA8L2hlYWRlcj5cblxuICAgICAgICAgICAgICAgIDxGaXhlZE5hdkJvZHk+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdmbGV4J319PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7d2lkdGg6ICdjYWxjKDEwMCUgLSAzNTBweCknfX0+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QW5ub3RhdGlvblJlcG9UYWJsZSBwZXJzaXN0ZW5jZUxheWVyTWFuYWdlcj17dGhpcy5wcm9wcy5wZXJzaXN0ZW5jZUxheWVyTWFuYWdlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVkRG9jSW5mb0V2ZW50RGlzcGF0Y2hlcj17dGhpcy5wcm9wcy51cGRhdGVkRG9jSW5mb0V2ZW50RGlzcGF0Y2hlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBvRG9jTWV0YU1hbmFnZXI9e3RoaXMucHJvcHMucmVwb0RvY01ldGFNYW5hZ2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcG9Eb2NNZXRhTG9hZGVyPXt0aGlzLnByb3BzLnJlcG9Eb2NNZXRhTG9hZGVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0ZWQ9e3JlcG9Bbm5vdGF0aW9uID0+IHRoaXMub25SZXBvQW5ub3RhdGlvblNlbGVjdGVkKHJlcG9Bbm5vdGF0aW9uKX0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC0yXCIgc3R5bGU9e3t3aWR0aDogJzM1MHB4J319PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSZXBvQW5ub3RhdGlvbk1ldGFWaWV3IHBlcnNpc3RlbmNlTGF5ZXJNYW5hZ2VyPXt0aGlzLnByb3BzLnBlcnNpc3RlbmNlTGF5ZXJNYW5hZ2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcG9Bbm5vdGF0aW9uPXt0aGlzLnN0YXRlLnJlcG9Bbm5vdGF0aW9ufS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPC9GaXhlZE5hdkJvZHk+XG5cbiAgICAgICAgICAgIDwvRml4ZWROYXY+XG5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uUmVwb0Fubm90YXRpb25TZWxlY3RlZChyZXBvQW5ub3RhdGlvbjogUmVwb0Fubm90YXRpb24pIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJBIHJlcG8gYW5ub3RhdGlvbiB3YXMgc2VsZWN0ZWQ6IFwiICwgcmVwb0Fubm90YXRpb24pO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3JlcG9Bbm5vdGF0aW9ufSk7XG5cbiAgICB9XG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUHJvcHMge1xuXG4gICAgcmVhZG9ubHkgcGVyc2lzdGVuY2VMYXllck1hbmFnZXI6IFBlcnNpc3RlbmNlTGF5ZXJNYW5hZ2VyO1xuXG4gICAgcmVhZG9ubHkgdXBkYXRlZERvY0luZm9FdmVudERpc3BhdGNoZXI6IElFdmVudERpc3BhdGNoZXI8SURvY0luZm8+O1xuXG4gICAgcmVhZG9ubHkgc3luY0JhclByb2dyZXNzOiBJRXZlbnREaXNwYXRjaGVyPFN5bmNCYXJQcm9ncmVzcz47XG5cbiAgICByZWFkb25seSByZXBvRG9jTWV0YU1hbmFnZXI6IFJlcG9Eb2NNZXRhTWFuYWdlcjtcblxuICAgIHJlYWRvbmx5IHJlcG9Eb2NNZXRhTG9hZGVyOiBSZXBvRG9jTWV0YUxvYWRlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJU3RhdGUge1xuXG4gICAgcmVhZG9ubHkgcmVwb0Fubm90YXRpb24/OiBSZXBvQW5ub3RhdGlvbjtcblxufVxuXG4iXX0=