"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Point_1 = require("../../../Point");
const Rects_1 = require("../../../Rects");
const RectText_1 = require("./RectText");
const TextNodes_1 = require("../selection/TextNodes");
class RectTexts {
    static toRectTexts(textNodes) {
        return textNodes.map(RectTexts.toRectText)
            .filter(current => current.boundingPageRect.width > 0 && current.boundingPageRect.height > 0);
    }
    static toRectText(textNode) {
        const range = TextNodes_1.TextNodes.getRange(textNode);
        const win = textNode.ownerDocument.defaultView;
        const scrollPoint = new Point_1.Point({
            x: win.scrollX,
            y: win.scrollY
        });
        const boundingClientRect = range.getBoundingClientRect();
        let boundingPageRect = Rects_1.Rects.validate(boundingClientRect);
        boundingPageRect = Rects_1.Rects.relativeTo(scrollPoint, boundingPageRect);
        return new RectText_1.RectText({
            clientRects: range.getClientRects(),
            boundingClientRect,
            boundingPageRect,
            text: textNode.textContent
        });
    }
}
exports.RectTexts = RectTexts;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjdFRleHRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUmVjdFRleHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQXFDO0FBR3JDLDBDQUFxQztBQUNyQyx5Q0FBb0M7QUFDcEMsc0RBQWlEO0FBRWpELE1BQWEsU0FBUztJQU1YLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBaUI7UUFDdkMsT0FBTyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUM7YUFDekIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksT0FBTyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNsSCxDQUFDO0lBU00sTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFjO1FBRW5DLE1BQU0sS0FBSyxHQUFHLHFCQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBSTNDLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFjLENBQUMsV0FBWSxDQUFDO1FBRWpELE1BQU0sV0FBVyxHQUFHLElBQUksYUFBSyxDQUFDO1lBQzFCLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTztZQUNkLENBQUMsRUFBRSxHQUFHLENBQUMsT0FBTztTQUNqQixDQUFDLENBQUM7UUFFSCxNQUFNLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBR3pELElBQUksZ0JBQWdCLEdBQUcsYUFBSyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRTFELGdCQUFnQixHQUFHLGFBQUssQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFFbkUsT0FBTyxJQUFJLG1CQUFRLENBQUM7WUFDaEIsV0FBVyxFQUFFLEtBQUssQ0FBQyxjQUFjLEVBQUU7WUFDbkMsa0JBQWtCO1lBQ2xCLGdCQUFnQjtZQUNoQixJQUFJLEVBQUUsUUFBUSxDQUFDLFdBQVc7U0FDN0IsQ0FBQyxDQUFDO0lBRVAsQ0FBQztDQUVKO0FBL0NELDhCQStDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UG9pbnR9IGZyb20gJy4uLy4uLy4uL1BvaW50JztcbmltcG9ydCB7UmVjdH0gZnJvbSAnLi4vLi4vLi4vUmVjdCc7XG5pbXBvcnQge09iamVjdHN9IGZyb20gJy4uLy4uLy4uL3V0aWwvT2JqZWN0cyc7XG5pbXBvcnQge1JlY3RzfSBmcm9tICcuLi8uLi8uLi9SZWN0cyc7XG5pbXBvcnQge1JlY3RUZXh0fSBmcm9tICcuL1JlY3RUZXh0JztcbmltcG9ydCB7VGV4dE5vZGVzfSBmcm9tICcuLi9zZWxlY3Rpb24vVGV4dE5vZGVzJztcblxuZXhwb3J0IGNsYXNzIFJlY3RUZXh0cyB7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0ZXh0Tm9kZXNcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHRvUmVjdFRleHRzKHRleHROb2RlczogTm9kZVtdKSB7XG4gICAgICAgIHJldHVybiB0ZXh0Tm9kZXMubWFwKFJlY3RUZXh0cy50b1JlY3RUZXh0KVxuICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihjdXJyZW50ID0+IGN1cnJlbnQuYm91bmRpbmdQYWdlUmVjdC53aWR0aCA+IDAgJiYgY3VycmVudC5ib3VuZGluZ1BhZ2VSZWN0LmhlaWdodCA+IDApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRha2UgYSBOb2RlIG9mIHR5cGUgVEVYVCBhbmQgYnVpbGQgYSBSZWN0VGV4dCBpbmNsdWRpbmcgdGhlIHRoZSB0ZXh0LFxuICAgICAqIHRoZSByZWN0cywgZXRjLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRleHROb2RlIHtOb2RlfVxuICAgICAqIEByZXR1cm4ge1JlY3RUZXh0fVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgdG9SZWN0VGV4dCh0ZXh0Tm9kZTogTm9kZSkge1xuXG4gICAgICAgIGNvbnN0IHJhbmdlID0gVGV4dE5vZGVzLmdldFJhbmdlKHRleHROb2RlKTtcblxuICAgICAgICAvLyBGSVhNRTogdGhpcyBpcyB3cm9uZyBhbmQgd2UgYXJlIHVzaW5nIHRlaCB3cm9uZyBzY3JvbGwgcG9zaXRpb24uXG5cbiAgICAgICAgY29uc3Qgd2luID0gdGV4dE5vZGUub3duZXJEb2N1bWVudCEuZGVmYXVsdFZpZXchO1xuXG4gICAgICAgIGNvbnN0IHNjcm9sbFBvaW50ID0gbmV3IFBvaW50KHtcbiAgICAgICAgICAgIHg6IHdpbi5zY3JvbGxYLFxuICAgICAgICAgICAgeTogd2luLnNjcm9sbFlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgYm91bmRpbmdDbGllbnRSZWN0ID0gcmFuZ2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgICAgLy8gRklYTUVMIHRoaXMgaXMgdGhlIGJ1ZyBiZWNhdXNlIGl0IGNvcGllcyB0b0pTT05cbiAgICAgICAgbGV0IGJvdW5kaW5nUGFnZVJlY3QgPSBSZWN0cy52YWxpZGF0ZShib3VuZGluZ0NsaWVudFJlY3QpO1xuXG4gICAgICAgIGJvdW5kaW5nUGFnZVJlY3QgPSBSZWN0cy5yZWxhdGl2ZVRvKHNjcm9sbFBvaW50LCBib3VuZGluZ1BhZ2VSZWN0KTtcblxuICAgICAgICByZXR1cm4gbmV3IFJlY3RUZXh0KHtcbiAgICAgICAgICAgIGNsaWVudFJlY3RzOiByYW5nZS5nZXRDbGllbnRSZWN0cygpLFxuICAgICAgICAgICAgYm91bmRpbmdDbGllbnRSZWN0LFxuICAgICAgICAgICAgYm91bmRpbmdQYWdlUmVjdCxcbiAgICAgICAgICAgIHRleHQ6IHRleHROb2RlLnRleHRDb250ZW50XG4gICAgICAgIH0pO1xuXG4gICAgfVxuXG59XG4iXX0=