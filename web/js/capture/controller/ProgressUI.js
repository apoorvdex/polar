"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = require("electron");
const Logger_1 = require("../../logger/Logger");
const Elements_1 = require("../../util/Elements");
const Preconditions_1 = require("../../Preconditions");
const log = Logger_1.Logger.create();
class ProgressUI {
    constructor() {
    }
    init() {
        log.info("Listening for progress updates...");
        electron_1.ipcRenderer.on('capture-progress-update', (event, progressEvent) => {
            this.onProgressEvent(progressEvent);
        });
    }
    onProgressEvent(progressEvent) {
        log.info("Got progress update: ", progressEvent.progress);
        this.updateProgress(progressEvent);
        this.updateLogView(progressEvent);
    }
    updateProgress(progressEvent) {
        let progressElement = document.querySelector("progress");
        progressElement.value = progressEvent.progress;
    }
    updateLogView(progressEvent) {
        let logElement = Preconditions_1.notNull(document.querySelector(".log"));
        let lineElement = Elements_1.Elements.createWrapperElementHTML(`<div class="">${progressEvent.details.url}</div>`);
        logElement.appendChild(lineElement);
    }
}
exports.ProgressUI = ProgressUI;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZ3Jlc3NVSS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlByb2dyZXNzVUkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBcUM7QUFDckMsZ0RBQTJDO0FBQzNDLGtEQUE2QztBQUM3Qyx1REFBNEM7QUFHNUMsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBSzVCLE1BQWEsVUFBVTtJQUVuQjtJQUVBLENBQUM7SUFFRCxJQUFJO1FBSUEsR0FBRyxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO1FBRTlDLHNCQUFXLENBQUMsRUFBRSxDQUFDLHlCQUF5QixFQUFFLENBQUMsS0FBcUIsRUFBRSxhQUFzQyxFQUFFLEVBQUU7WUFDeEcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUMsQ0FBQztJQUdQLENBQUM7SUFFRCxlQUFlLENBQUMsYUFBc0M7UUFFbEQsR0FBRyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFMUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBRXRDLENBQUM7SUFFRCxjQUFjLENBQUMsYUFBc0M7UUFFakQsSUFBSSxlQUFlLEdBQXdCLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUUsZUFBZSxDQUFDLEtBQUssR0FBRyxhQUFhLENBQUMsUUFBUSxDQUFDO0lBRW5ELENBQUM7SUFFRCxhQUFhLENBQUMsYUFBc0M7UUFFaEQsSUFBSSxVQUFVLEdBQUcsdUJBQU8sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFekQsSUFBSSxXQUFXLEdBQUcsbUJBQVEsQ0FBQyx3QkFBd0IsQ0FBQyxpQkFBaUIsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBRXhHLFVBQVUsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFeEMsQ0FBQztDQUVKO0FBN0NELGdDQTZDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXBjUmVuZGVyZXJ9IGZyb20gJ2VsZWN0cm9uJztcbmltcG9ydCB7TG9nZ2VyfSBmcm9tICcuLi8uLi9sb2dnZXIvTG9nZ2VyJztcbmltcG9ydCB7RWxlbWVudHN9IGZyb20gJy4uLy4uL3V0aWwvRWxlbWVudHMnO1xuaW1wb3J0IHtub3ROdWxsfSBmcm9tICcuLi8uLi9QcmVjb25kaXRpb25zJztcbmltcG9ydCB7UGVuZGluZ1dlYlJlcXVlc3RzRXZlbnR9IGZyb20gJy4uLy4uL3dlYnJlcXVlc3RzL1BlbmRpbmdXZWJSZXF1ZXN0c0xpc3RlbmVyJztcblxuY29uc3QgbG9nID0gTG9nZ2VyLmNyZWF0ZSgpO1xuXG4vKipcbiAqIEBFbGVjdHJvblJlbmRlcmVyQ29udGV4dFxuICovXG5leHBvcnQgY2xhc3MgUHJvZ3Jlc3NVSSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuICAgIGluaXQoKSB7XG5cbiAgICAgICAgLy8gbGlzdGVuIGFuZCBoYW5kbGUgXCJjYXB0dXJlLXByb2dyZXNzXCIgSVBDIG1lc3NhZ2VzXG5cbiAgICAgICAgbG9nLmluZm8oXCJMaXN0ZW5pbmcgZm9yIHByb2dyZXNzIHVwZGF0ZXMuLi5cIik7XG5cbiAgICAgICAgaXBjUmVuZGVyZXIub24oJ2NhcHR1cmUtcHJvZ3Jlc3MtdXBkYXRlJywgKGV2ZW50OiBFbGVjdHJvbi5FdmVudCwgcHJvZ3Jlc3NFdmVudDogUGVuZGluZ1dlYlJlcXVlc3RzRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMub25Qcm9ncmVzc0V2ZW50KHByb2dyZXNzRXZlbnQpO1xuICAgICAgICB9KTtcblxuXG4gICAgfVxuXG4gICAgb25Qcm9ncmVzc0V2ZW50KHByb2dyZXNzRXZlbnQ6IFBlbmRpbmdXZWJSZXF1ZXN0c0V2ZW50KSB7XG5cbiAgICAgICAgbG9nLmluZm8oXCJHb3QgcHJvZ3Jlc3MgdXBkYXRlOiBcIiwgcHJvZ3Jlc3NFdmVudC5wcm9ncmVzcyk7XG5cbiAgICAgICAgdGhpcy51cGRhdGVQcm9ncmVzcyhwcm9ncmVzc0V2ZW50KTtcbiAgICAgICAgdGhpcy51cGRhdGVMb2dWaWV3KHByb2dyZXNzRXZlbnQpO1xuXG4gICAgfVxuXG4gICAgdXBkYXRlUHJvZ3Jlc3MocHJvZ3Jlc3NFdmVudDogUGVuZGluZ1dlYlJlcXVlc3RzRXZlbnQpIHtcblxuICAgICAgICBsZXQgcHJvZ3Jlc3NFbGVtZW50ID0gPEhUTUxQcm9ncmVzc0VsZW1lbnQ+ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInByb2dyZXNzXCIpO1xuICAgICAgICBwcm9ncmVzc0VsZW1lbnQudmFsdWUgPSBwcm9ncmVzc0V2ZW50LnByb2dyZXNzO1xuXG4gICAgfVxuXG4gICAgdXBkYXRlTG9nVmlldyhwcm9ncmVzc0V2ZW50OiBQZW5kaW5nV2ViUmVxdWVzdHNFdmVudCkge1xuXG4gICAgICAgIGxldCBsb2dFbGVtZW50ID0gbm90TnVsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvZ1wiKSk7XG5cbiAgICAgICAgbGV0IGxpbmVFbGVtZW50ID0gRWxlbWVudHMuY3JlYXRlV3JhcHBlckVsZW1lbnRIVE1MKGA8ZGl2IGNsYXNzPVwiXCI+JHtwcm9ncmVzc0V2ZW50LmRldGFpbHMudXJsfTwvZGl2PmApO1xuXG4gICAgICAgIGxvZ0VsZW1lbnQuYXBwZW5kQ2hpbGQobGluZUVsZW1lbnQpO1xuXG4gICAgfVxuXG59XG5cbiJdfQ==