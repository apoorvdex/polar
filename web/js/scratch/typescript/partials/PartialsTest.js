"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
class Address {
    constructor(city, state, zip) {
        this.city = "San Francisco";
        this.state = "CA";
        this.zip = 94107;
        this.city = city;
        this.state = state;
        this.zip = zip;
    }
    static create(address) {
        let result = Object.create(Address.prototype);
        Object.assign(result, address);
        return result;
    }
}
describe('Partials', function () {
    xit("Test basic partial", function () {
        Address.create({});
    });
    xit("Test defaults with partials", function () {
        let address = Address.create({});
        chai_1.assert.equal(address.city, "San Francisco");
    });
    xit("Readonly types.", function () {
        let address = Address.create({});
        chai_1.assert.equal(address.city, "San Francisco");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFydGlhbHNUZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUGFydGlhbHNUZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQTRCO0FBRTVCLE1BQU0sT0FBTztJQU1ULFlBQVksSUFBWSxFQUFFLEtBQWEsRUFBRSxHQUFXO1FBSjdDLFNBQUksR0FBVyxlQUFlLENBQUM7UUFDL0IsVUFBSyxHQUFXLElBQUksQ0FBQztRQUNyQixRQUFHLEdBQVcsS0FBSyxDQUFDO1FBR3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ25CLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQXlCO1FBQ25DLElBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQy9CLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Q0FFSjtBQUVELFFBQVEsQ0FBQyxVQUFVLEVBQUU7SUFFakIsR0FBRyxDQUFDLG9CQUFvQixFQUFFO1FBRXRCLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7SUFNdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxHQUFHLENBQUMsNkJBQTZCLEVBQUU7UUFFL0IsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVqQyxhQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFNaEQsQ0FBQyxDQUFDLENBQUM7SUFFSCxHQUFHLENBQUMsaUJBQWlCLEVBQUU7UUFFbkIsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVqQyxhQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFNaEQsQ0FBQyxDQUFDLENBQUM7QUFJUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXNzZXJ0fSBmcm9tICdjaGFpJztcblxuY2xhc3MgQWRkcmVzcyB7XG5cbiAgICBwdWJsaWMgY2l0eTogc3RyaW5nID0gXCJTYW4gRnJhbmNpc2NvXCI7XG4gICAgcHVibGljIHN0YXRlOiBzdHJpbmcgPSBcIkNBXCI7XG4gICAgcHVibGljIHppcDogbnVtYmVyID0gOTQxMDc7XG5cbiAgICBjb25zdHJ1Y3RvcihjaXR5OiBzdHJpbmcsIHN0YXRlOiBzdHJpbmcsIHppcDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY2l0eSA9IGNpdHk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgdGhpcy56aXAgPSB6aXA7XG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZShhZGRyZXNzOiBQYXJ0aWFsPEFkZHJlc3M+KTogQWRkcmVzcyB7XG4gICAgICAgIGxldCByZXN1bHQgPSBPYmplY3QuY3JlYXRlKEFkZHJlc3MucHJvdG90eXBlKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihyZXN1bHQsIGFkZHJlc3MpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxufVxuXG5kZXNjcmliZSgnUGFydGlhbHMnLCBmdW5jdGlvbigpIHtcblxuICAgIHhpdChcIlRlc3QgYmFzaWMgcGFydGlhbFwiLCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgQWRkcmVzcy5jcmVhdGUoe30pO1xuXG4gICAgICAgIC8vXG4gICAgICAgIC8vXG4gICAgICAgIC8vIHN0cmluZ3MubWFwKGN1cnJlbnQgPT4gMTAxKTtcblxuICAgIH0pO1xuXG4gICAgeGl0KFwiVGVzdCBkZWZhdWx0cyB3aXRoIHBhcnRpYWxzXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBsZXQgYWRkcmVzcyA9IEFkZHJlc3MuY3JlYXRlKHt9KTtcblxuICAgICAgICBhc3NlcnQuZXF1YWwoYWRkcmVzcy5jaXR5LCBcIlNhbiBGcmFuY2lzY29cIik7XG5cbiAgICAgICAgLy9cbiAgICAgICAgLy9cbiAgICAgICAgLy8gc3RyaW5ncy5tYXAoY3VycmVudCA9PiAxMDEpO1xuXG4gICAgfSk7XG5cbiAgICB4aXQoXCJSZWFkb25seSB0eXBlcy5cIiwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGxldCBhZGRyZXNzID0gQWRkcmVzcy5jcmVhdGUoe30pO1xuXG4gICAgICAgIGFzc2VydC5lcXVhbChhZGRyZXNzLmNpdHksIFwiU2FuIEZyYW5jaXNjb1wiKTtcblxuICAgICAgICAvL1xuICAgICAgICAvL1xuICAgICAgICAvLyBzdHJpbmdzLm1hcChjdXJyZW50ID0+IDEwMSk7XG5cbiAgICB9KTtcblxuXG5cbn0pO1xuXG4iXX0=