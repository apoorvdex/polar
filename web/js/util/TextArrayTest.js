"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const TextArray_1 = require("./TextArray");
describe('TextArray', function () {
    it("Create + toString 1x1", function () {
        chai_1.assert.equal(new TextArray_1.TextArray(1, 1).toString(), " \n");
    });
    it("Create + toString 2x2", function () {
        chai_1.assert.equal(new TextArray_1.TextArray(2, 2).toString(), "  \n  \n");
    });
    it("Create + toString 2x2", function () {
        chai_1.assert.equal(new TextArray_1.TextArray(2, 2).toString(), "  \n  \n");
    });
    it("Create + toString 2x2", function () {
        let textArray = new TextArray_1.TextArray(2, 2);
        textArray.write(0, 0, 'h');
        textArray.write(1, 0, 'i');
        chai_1.assert.equal(textArray.toString(), "hi\n  \n");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dEFycmF5VGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlRleHRBcnJheVRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQkFBNEI7QUFDNUIsMkNBQXNDO0FBRXRDLFFBQVEsQ0FBQyxXQUFXLEVBQUU7SUFJbEIsRUFBRSxDQUFDLHVCQUF1QixFQUFFO1FBRXhCLGFBQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxxQkFBUyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUV2RCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyx1QkFBdUIsRUFBRTtRQUV4QixhQUFNLENBQUMsS0FBSyxDQUFDLElBQUkscUJBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFNUQsQ0FBQyxDQUFDLENBQUM7SUFHSCxFQUFFLENBQUMsdUJBQXVCLEVBQUU7UUFFeEIsYUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLHFCQUFTLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRTVELENBQUMsQ0FBQyxDQUFDO0lBR0gsRUFBRSxDQUFDLHVCQUF1QixFQUFFO1FBRXhCLElBQUksU0FBUyxHQUFHLElBQUkscUJBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbkMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxHQUFHLENBQUMsQ0FBQztRQUN6QixhQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUVuRCxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge2Fzc2VydH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQge1RleHRBcnJheX0gZnJvbSAnLi9UZXh0QXJyYXknO1xuXG5kZXNjcmliZSgnVGV4dEFycmF5JywgZnVuY3Rpb24oKSB7XG5cbiAgICAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy84MDI0MTQ5L2lzLWl0LXBvc3NpYmxlLXRvLWdldC10aGUtbm9uLWVudW1lcmFibGUtaW5oZXJpdGVkLXByb3BlcnR5LW5hbWVzLW9mLWFuLW9iamVjdFxuXG4gICAgaXQoXCJDcmVhdGUgKyB0b1N0cmluZyAxeDFcIiwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGFzc2VydC5lcXVhbChuZXcgVGV4dEFycmF5KDEsMSkudG9TdHJpbmcoKSwgXCIgXFxuXCIpO1xuXG4gICAgfSk7XG5cbiAgICBpdChcIkNyZWF0ZSArIHRvU3RyaW5nIDJ4MlwiLCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKG5ldyBUZXh0QXJyYXkoMiwyKS50b1N0cmluZygpLCBcIiAgXFxuICBcXG5cIik7XG5cbiAgICB9KTtcblxuXG4gICAgaXQoXCJDcmVhdGUgKyB0b1N0cmluZyAyeDJcIiwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGFzc2VydC5lcXVhbChuZXcgVGV4dEFycmF5KDIsMikudG9TdHJpbmcoKSwgXCIgIFxcbiAgXFxuXCIpO1xuXG4gICAgfSk7XG5cblxuICAgIGl0KFwiQ3JlYXRlICsgdG9TdHJpbmcgMngyXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBsZXQgdGV4dEFycmF5ID0gbmV3IFRleHRBcnJheSgyLDIpO1xuXG4gICAgICAgIHRleHRBcnJheS53cml0ZSgwLDAsJ2gnKTtcbiAgICAgICAgdGV4dEFycmF5LndyaXRlKDEsMCwnaScpO1xuICAgICAgICBhc3NlcnQuZXF1YWwodGV4dEFycmF5LnRvU3RyaW5nKCksIFwiaGlcXG4gIFxcblwiKTtcblxuICAgIH0pO1xuXG59KTtcbiJdfQ==