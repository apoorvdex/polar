"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Strings_1 = require("./Strings");
class ArgsParser {
    static _toKey(key) {
        key = key.replace(/^--/, "");
        key = key.replace(/-([a-zA-Z])/g, (match) => {
            return match.replace("-", "").toUpperCase();
        });
        return key;
    }
    static parse(argv) {
        let result = {};
        argv.forEach((arg) => {
            if (/^--[a-zA-Z0-9_-]+=[a-zA-Z0-9_-]+/.test(arg)) {
                let _split = arg.split("=");
                let key = ArgsParser._toKey(_split[0]);
                let value = Strings_1.Strings.toPrimitive(_split[1]);
                result[key] = value;
            }
        });
        return result;
    }
}
exports.ArgsParser = ArgsParser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJnc1BhcnNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkFyZ3NQYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSx1Q0FBa0M7QUFFbEMsTUFBYSxVQUFVO0lBT25CLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBVztRQUVyQixHQUFHLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDN0IsR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDeEMsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNoRCxDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sR0FBRyxDQUFDO0lBRWYsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBVztRQUVwQixJQUFJLE1BQU0sR0FBMEIsRUFBRSxDQUFDO1FBRXZDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUVqQixJQUFJLGtDQUFrQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRztnQkFDL0MsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDNUIsSUFBSSxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxLQUFLLEdBQUcsaUJBQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7YUFDdkI7UUFFTCxDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sTUFBTSxDQUFDO0lBRWxCLENBQUM7Q0FFSjtBQXJDRCxnQ0FxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNpbXBsZSB1dGlsIHRoYXQgdGFrZXMgY29tbWFuZCBsaW5lIGFyZ3VtZW50cyBsaWtlIC0tZm9vPWJhciBhbmQgcGFyc2VzIHRoZW1cbiAqIGludG8gYSBtYXAuXG4gKi9cbmltcG9ydCB7U3RyaW5nc30gZnJvbSAnLi9TdHJpbmdzJztcblxuZXhwb3J0IGNsYXNzIEFyZ3NQYXJzZXIge1xuXG4gICAgLyoqXG4gICAgICogQ29udmVydCBhbiBhcmd1bWVudCBuYW1lIC0tZW5hYmxlLWZvbyBpbiBhIC0tZW5hYmxlLWZvbz1iYXIgYXJnIHRvIGVuYWJsZUZvb1xuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBzdGF0aWMgX3RvS2V5KGtleTogc3RyaW5nKSB7XG5cbiAgICAgICAga2V5ID0ga2V5LnJlcGxhY2UoL14tLS8sIFwiXCIpO1xuICAgICAgICBrZXkgPSBrZXkucmVwbGFjZSgvLShbYS16QS1aXSkvZywgKG1hdGNoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2gucmVwbGFjZShcIi1cIiwgXCJcIikudG9VcHBlckNhc2UoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGtleTtcblxuICAgIH1cblxuICAgIHN0YXRpYyBwYXJzZShhcmd2OiBhbnlbXSkge1xuXG4gICAgICAgIGxldCByZXN1bHQ6IHtbbmFtZTogc3RyaW5nXTogYW55fSA9IHt9O1xuXG4gICAgICAgIGFyZ3YuZm9yRWFjaCgoYXJnKSA9PiB7XG5cbiAgICAgICAgICAgIGlmKCAvXi0tW2EtekEtWjAtOV8tXSs9W2EtekEtWjAtOV8tXSsvLnRlc3QoYXJnKSApIHtcbiAgICAgICAgICAgICAgICBsZXQgX3NwbGl0ID0gYXJnLnNwbGl0KFwiPVwiKTtcbiAgICAgICAgICAgICAgICBsZXQga2V5ID0gQXJnc1BhcnNlci5fdG9LZXkoX3NwbGl0WzBdKTtcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBTdHJpbmdzLnRvUHJpbWl0aXZlKF9zcGxpdFsxXSk7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuXG4gICAgfVxuXG59XG4iXX0=