"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Numbers {
    static compare(n0, n1) {
        if (n0 === undefined && n1 !== undefined) {
            return -1;
        }
        if (n0 === undefined && n1 === undefined) {
            return 0;
        }
        if (n0 !== undefined && n1 === undefined) {
            return 1;
        }
        return n0 - n1;
    }
    static range(start, end) {
        const result = [];
        for (let idx = start; idx <= end; ++idx) {
            result.push(idx);
        }
        return result;
    }
    static toFixedFloat(input, width) {
        return parseFloat(input.toFixed(width));
    }
}
exports.Numbers = Numbers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTnVtYmVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk51bWJlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFhLE9BQU87SUFFVCxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQXNCLEVBQUUsRUFBc0I7UUFFaEUsSUFBSSxFQUFFLEtBQUssU0FBUyxJQUFJLEVBQUUsS0FBSyxTQUFTLEVBQUU7WUFDdEMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNiO1FBRUQsSUFBSSxFQUFFLEtBQUssU0FBUyxJQUFJLEVBQUUsS0FBSyxTQUFTLEVBQUU7WUFDdEMsT0FBTyxDQUFDLENBQUM7U0FDWjtRQUVELElBQUksRUFBRSxLQUFLLFNBQVMsSUFBSSxFQUFFLEtBQUssU0FBUyxFQUFFO1lBQ3RDLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7UUFFRCxPQUFPLEVBQUcsR0FBRyxFQUFHLENBQUM7SUFFckIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBYSxFQUFFLEdBQVc7UUFFMUMsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBRWxCLEtBQUssSUFBSSxHQUFHLEdBQUcsS0FBSyxFQUFFLEdBQUcsSUFBSSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUU7WUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNwQjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBRWxCLENBQUM7SUFFTSxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQWEsRUFBRSxLQUFhO1FBQ25ELE9BQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBRUo7QUFwQ0QsMEJBb0NDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIE51bWJlcnMge1xuXG4gICAgcHVibGljIHN0YXRpYyBjb21wYXJlKG4wOiBudW1iZXIgfCB1bmRlZmluZWQsIG4xOiBudW1iZXIgfCB1bmRlZmluZWQpIHtcblxuICAgICAgICBpZiAobjAgPT09IHVuZGVmaW5lZCAmJiBuMSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobjAgPT09IHVuZGVmaW5lZCAmJiBuMSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuMCAhPT0gdW5kZWZpbmVkICYmIG4xID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG4wISAtIG4xITtcblxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcmFuZ2Uoc3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXIpOiBSZWFkb25seUFycmF5PG51bWJlcj4ge1xuXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gICAgICAgIGZvciAobGV0IGlkeCA9IHN0YXJ0OyBpZHggPD0gZW5kOyArK2lkeCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goaWR4KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHRvRml4ZWRGbG9hdChpbnB1dDogbnVtYmVyLCB3aWR0aDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaW5wdXQudG9GaXhlZCh3aWR0aCkpO1xuICAgIH1cblxufVxuIl19