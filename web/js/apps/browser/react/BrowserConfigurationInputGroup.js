"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const reactstrap_1 = require("reactstrap");
const Optional_1 = require("../../../util/ts/Optional");
class BrowserConfigurationInputGroup extends react_1.default.Component {
    constructor(props) {
        super(props);
        this.toggle = this.toggle.bind(this);
        this.onClick = this.onClick.bind(this);
        this.state = {
            open: false
        };
    }
    render() {
        return (react_1.default.createElement(reactstrap_1.InputGroupButtonDropdown, { title: "Configure browser settings for capture", addonType: "append", isOpen: this.state.open, toggle: this.toggle },
            react_1.default.createElement(reactstrap_1.DropdownToggle, { caret: true },
                react_1.default.createElement("span", { className: "fab fa-chrome fa-lg", "aria-hidden": "true" })),
            react_1.default.createElement(reactstrap_1.DropdownMenu, { right: true },
                react_1.default.createElement(reactstrap_1.DropdownItem, { header: true }, "Browser:"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "MOBILE_GALAXY_S8", onClick: (event) => this.onClick(event) }, "Mobile Galaxy S8 (412x846)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "MOBILE_GALAXY_S8_WITH_CHROME_66_WIDTH_700", onClick: (event) => this.onClick(event) }, "Mobile Galaxy S8 (700x970)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "MOBILE_GALAXY_S8_WITH_CHROME_66_WIDTH_750", onClick: (event) => this.onClick(event) }, "Mobile Galaxy S8 (750x970)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "DESKTOP_850", onClick: (event) => this.onClick(event) }, "Chrome on Desktop (850)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "DESKTOP_1024", onClick: (event) => this.onClick(event) }, "Chrome on Desktop (1024)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "DESKTOP_1280", onClick: (event) => this.onClick(event) }, "Chrome on Desktop (1280)"),
                react_1.default.createElement(reactstrap_1.DropdownItem, { "data-browser-name": "DESKTOP_1920", onClick: (event) => this.onClick(event) }, "Chrome on Desktop (1920)"))));
    }
    onClick(event) {
        const target = event.target;
        const browserName = target.getAttribute('data-browser-name');
        console.log("clicked: " + browserName);
        Optional_1.Optional.of(this.props.onBrowserChanged).map(callback => callback(browserName));
    }
    toggle() {
        this.setState({
            open: !this.state.open
        });
    }
}
exports.BrowserConfigurationInputGroup = BrowserConfigurationInputGroup;
//# sourceMappingURL=data:application/json;base64,