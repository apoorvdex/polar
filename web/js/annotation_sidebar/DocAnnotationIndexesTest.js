"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AnnotationType_1 = require("../metadata/AnnotationType");
const Arrays_1 = require("../util/Arrays");
const DocAnnotationIndexes_1 = require("./DocAnnotationIndexes");
const DocAnnotationIndex_1 = require("./DocAnnotationIndex");
const Assertions_1 = require("../test/Assertions");
const TextHighlights_1 = require("../metadata/TextHighlights");
describe('DocAnnotationIndexes', function () {
    it("Basic sorting", function () {
        const a0 = createAnnotation('0001', 1, 0, 0);
        const a1 = createAnnotation('0002', 1, 0, 0);
        const a2 = createAnnotation('0003', 1, 0, 0);
        const docAnnotationMap = createDocAnnotationMap(a0, a1);
        const docAnnotationIndex = new DocAnnotationIndex_1.DocAnnotationIndex(docAnnotationMap, Object.values(docAnnotationMap));
        const rebuiltDocAnnotationIndex = DocAnnotationIndexes_1.DocAnnotationIndexes.rebuild(docAnnotationIndex, a2);
        const expected = [
            {
                "id": "0001",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 1,
                "position": {
                    "x": 0,
                    "y": 0
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            },
            {
                "id": "0002",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 1,
                "position": {
                    "x": 0,
                    "y": 0
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            },
            {
                "id": "0003",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 1,
                "position": {
                    "x": 0,
                    "y": 0
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            }
        ];
        const result = Arrays_1.Arrays.first(rebuiltDocAnnotationIndex.sortedDocAnnotation);
        Assertions_1.assertJSON(result, expected);
    });
    it("complex sorting", function () {
        const a0 = createAnnotation('0001', 3, 0, 100);
        const a1 = createAnnotation('0002', 2, 100, 0);
        const a2 = createAnnotation('0003', 1, 25, 50);
        const docAnnotationMap = createDocAnnotationMap(a0, a1);
        const docAnnotationIndex = new DocAnnotationIndex_1.DocAnnotationIndex(docAnnotationMap, Object.values(docAnnotationMap));
        const rebuiltDocAnnotationIndex = DocAnnotationIndexes_1.DocAnnotationIndexes.rebuild(docAnnotationIndex, a2);
        const expected = [
            {
                "id": "0003",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 1,
                "position": {
                    "x": 25,
                    "y": 50
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            },
            {
                "id": "0002",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 2,
                "position": {
                    "x": 100,
                    "y": 0
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            },
            {
                "id": "0001",
                "annotationType": "TEXT_HIGHLIGHT",
                "pageNum": 3,
                "position": {
                    "x": 0,
                    "y": 100
                },
                "created": "2009-06-15T13:45:30",
                "pageMeta": null,
                "children": [],
                "comments": []
            }
        ];
        Assertions_1.assertJSON(rebuiltDocAnnotationIndex.sortedDocAnnotation, expected);
    });
});
function createAnnotation(id, pageNum, x, y) {
    const textHighlight = TextHighlights_1.TextHighlights.createMockTextHighlight();
    return {
        id,
        annotationType: AnnotationType_1.AnnotationType.TEXT_HIGHLIGHT,
        pageNum,
        position: {
            x,
            y
        },
        created: '2009-06-15T13:45:30',
        pageMeta: null,
        children: [],
        comments: [],
        original: textHighlight
    };
}
function createDocAnnotationMap(...docAnnotations) {
    const result = {};
    docAnnotations = Arrays_1.Arrays.shuffle(...docAnnotations);
    for (const docAnnotation of docAnnotations) {
        result[docAnnotation.id] = docAnnotation;
    }
    return result;
}
//# sourceMappingURL=data:application/json;base64,