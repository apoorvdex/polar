"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AnnotationSidebars_1 = require("./AnnotationSidebars");
const Logger_1 = require("../logger/Logger");
const LocalPrefs_1 = require("../util/LocalPrefs");
const log = Logger_1.Logger.create();
const PREF_SIDEBAR_OPEN = 'annotation-sidebar-open';
class AnnotationSidebarService {
    constructor(model) {
        this.model = model;
    }
    start() {
        this.model.registerListenerForDocumentLoaded(event => this.onDocumentLoaded(event));
        window.addEventListener("message", event => this.onMessageReceived(event), false);
        if (!LocalPrefs_1.LocalPrefs.defined(PREF_SIDEBAR_OPEN)) {
            LocalPrefs_1.LocalPrefs.mark(PREF_SIDEBAR_OPEN);
        }
        return this;
    }
    onDocumentLoaded(event) {
        log.debug("Creating annotation sidebar");
        this.splitter = AnnotationSidebars_1.AnnotationSidebars.create(event.docMeta);
        if (LocalPrefs_1.LocalPrefs.isMarked(PREF_SIDEBAR_OPEN)) {
            this.splitter.expand();
        }
        else {
            this.splitter.collapse();
        }
    }
    onMessageReceived(event) {
        log.info("Received message: ", event);
        switch (event.data.type) {
            case "toggle-annotation-sidebar":
                this.toggleAnnotationSidebar();
                break;
        }
    }
    toggleAnnotationSidebar() {
        const state = this.splitter.toggle();
        if (state === 'expanded') {
            LocalPrefs_1.LocalPrefs.mark(PREF_SIDEBAR_OPEN);
        }
        else {
            LocalPrefs_1.LocalPrefs.mark(PREF_SIDEBAR_OPEN, false);
        }
    }
}
exports.AnnotationSidebarService = AnnotationSidebarService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5ub3RhdGlvblNpZGViYXJTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQW5ub3RhdGlvblNpZGViYXJTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsNkRBQXdEO0FBQ3hELDZDQUF3QztBQUV4QyxtREFBOEM7QUFFOUMsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRTVCLE1BQU0saUJBQWlCLEdBQUcseUJBQXlCLENBQUM7QUFFcEQsTUFBYSx3QkFBd0I7SUFNakMsWUFBbUIsS0FBWTtRQUMzQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRU0sS0FBSztRQUVSLElBQUksQ0FBQyxLQUFLLENBQUMsaUNBQWlDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUVwRixNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRWxGLElBQUksQ0FBRSx1QkFBVSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1lBR3pDLHVCQUFVLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUVoQixDQUFDO0lBRU8sZ0JBQWdCLENBQUMsS0FBMEI7UUFFL0MsR0FBRyxDQUFDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxRQUFRLEdBQUcsdUNBQWtCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV6RCxJQUFJLHVCQUFVLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLEVBQUU7WUFDeEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUMxQjthQUFNO1lBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUM1QjtJQUVMLENBQUM7SUFFTyxpQkFBaUIsQ0FBQyxLQUFVO1FBRWhDLEdBQUcsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFdEMsUUFBUSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUVyQixLQUFLLDJCQUEyQjtnQkFDNUIsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7Z0JBQy9CLE1BQU07U0FFYjtJQUVMLENBQUM7SUFFTyx1QkFBdUI7UUFFM0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUV0QyxJQUFJLEtBQUssS0FBSyxVQUFVLEVBQUU7WUFDdEIsdUJBQVUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUN0QzthQUFNO1lBQ0gsdUJBQVUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDN0M7SUFFTCxDQUFDO0NBRUo7QUFqRUQsNERBaUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEb2N1bWVudExvYWRlZEV2ZW50LCBNb2RlbH0gZnJvbSAnLi4vbW9kZWwvTW9kZWwnO1xuaW1wb3J0IHtBbm5vdGF0aW9uU2lkZWJhcnN9IGZyb20gJy4vQW5ub3RhdGlvblNpZGViYXJzJztcbmltcG9ydCB7TG9nZ2VyfSBmcm9tICcuLi9sb2dnZXIvTG9nZ2VyJztcbmltcG9ydCB7U3BsaXR0ZXJ9IGZyb20gJy4uL3VpL3NwbGl0dGVyL1NwbGl0dGVyJztcbmltcG9ydCB7TG9jYWxQcmVmc30gZnJvbSAnLi4vdXRpbC9Mb2NhbFByZWZzJztcblxuY29uc3QgbG9nID0gTG9nZ2VyLmNyZWF0ZSgpO1xuXG5jb25zdCBQUkVGX1NJREVCQVJfT1BFTiA9ICdhbm5vdGF0aW9uLXNpZGViYXItb3Blbic7XG5cbmV4cG9ydCBjbGFzcyBBbm5vdGF0aW9uU2lkZWJhclNlcnZpY2Uge1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBtb2RlbDogTW9kZWw7XG5cbiAgICBwcml2YXRlIHNwbGl0dGVyPzogU3BsaXR0ZXI7XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IobW9kZWw6IE1vZGVsKSB7XG4gICAgICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhcnQoKSB7XG5cbiAgICAgICAgdGhpcy5tb2RlbC5yZWdpc3Rlckxpc3RlbmVyRm9yRG9jdW1lbnRMb2FkZWQoZXZlbnQgPT4gdGhpcy5vbkRvY3VtZW50TG9hZGVkKGV2ZW50KSk7XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGV2ZW50ID0+IHRoaXMub25NZXNzYWdlUmVjZWl2ZWQoZXZlbnQpLCBmYWxzZSk7XG5cbiAgICAgICAgaWYgKCEgTG9jYWxQcmVmcy5kZWZpbmVkKFBSRUZfU0lERUJBUl9PUEVOKSkge1xuICAgICAgICAgICAgLy8gbWFrZSB0aGUgc2lkZWJhciBvcGVuIGJ5IGRlZmF1bHQgbm93IHNvIHdlIGNhbiBtYWtlIHRoaXMgZmVhdHVyZVxuICAgICAgICAgICAgLy8gbW9yZSBkaXNjb3ZlcmFibGUuXG4gICAgICAgICAgICBMb2NhbFByZWZzLm1hcmsoUFJFRl9TSURFQkFSX09QRU4pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uRG9jdW1lbnRMb2FkZWQoZXZlbnQ6IERvY3VtZW50TG9hZGVkRXZlbnQpIHtcblxuICAgICAgICBsb2cuZGVidWcoXCJDcmVhdGluZyBhbm5vdGF0aW9uIHNpZGViYXJcIik7XG4gICAgICAgIHRoaXMuc3BsaXR0ZXIgPSBBbm5vdGF0aW9uU2lkZWJhcnMuY3JlYXRlKGV2ZW50LmRvY01ldGEpO1xuXG4gICAgICAgIGlmIChMb2NhbFByZWZzLmlzTWFya2VkKFBSRUZfU0lERUJBUl9PUEVOKSkge1xuICAgICAgICAgICAgdGhpcy5zcGxpdHRlci5leHBhbmQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3BsaXR0ZXIuY29sbGFwc2UoKTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbk1lc3NhZ2VSZWNlaXZlZChldmVudDogYW55KSB7XG5cbiAgICAgICAgbG9nLmluZm8oXCJSZWNlaXZlZCBtZXNzYWdlOiBcIiwgZXZlbnQpO1xuXG4gICAgICAgIHN3aXRjaCAoZXZlbnQuZGF0YS50eXBlKSB7XG5cbiAgICAgICAgICAgIGNhc2UgXCJ0b2dnbGUtYW5ub3RhdGlvbi1zaWRlYmFyXCI6XG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVBbm5vdGF0aW9uU2lkZWJhcigpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHByaXZhdGUgdG9nZ2xlQW5ub3RhdGlvblNpZGViYXIoKSB7XG5cbiAgICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLnNwbGl0dGVyIS50b2dnbGUoKTtcblxuICAgICAgICBpZiAoc3RhdGUgPT09ICdleHBhbmRlZCcpIHtcbiAgICAgICAgICAgIExvY2FsUHJlZnMubWFyayhQUkVGX1NJREVCQVJfT1BFTik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBMb2NhbFByZWZzLm1hcmsoUFJFRl9TSURFQkFSX09QRU4sIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG4iXX0=