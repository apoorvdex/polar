"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const TestingTime_1 = require("../test/TestingTime");
const Logger_1 = require("./Logger");
TestingTime_1.TestingTime.freeze();
describe('Logger', function () {
    it("basic", function () {
        const log = Logger_1.Logger.create();
        chai_1.assert.equal(log != null, true);
    });
    it("with two arguments", function () {
        const log = Logger_1.Logger.create();
        const hello = { msg: 'hello' };
        const world = { msg: 'world' };
        log.info("with two arguments:", hello, world);
    });
    it("with exception", function () {
        const log = Logger_1.Logger.create();
        log.error("This is an error: ", new Error('Something broke'));
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nZ2VyVGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkxvZ2dlclRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBNEI7QUFDNUIscURBQWdEO0FBQ2hELHFDQUFnQztBQUVoQyx5QkFBVyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBRXJCLFFBQVEsQ0FBQyxRQUFRLEVBQUU7SUFFZixFQUFFLENBQUMsT0FBTyxFQUFFO1FBS1IsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTVCLGFBQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUVwQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxvQkFBb0IsRUFBRTtRQUtyQixNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFNUIsTUFBTSxLQUFLLEdBQUcsRUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFDLENBQUM7UUFDN0IsTUFBTSxLQUFLLEdBQUcsRUFBQyxHQUFHLEVBQUUsT0FBTyxFQUFDLENBQUM7UUFDN0IsR0FBRyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFbEQsQ0FBQyxDQUFDLENBQUM7SUFHSCxFQUFFLENBQUMsZ0JBQWdCLEVBQUU7UUFLakIsTUFBTSxHQUFHLEdBQUcsZUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTVCLEdBQUcsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0lBRWxFLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Fzc2VydH0gZnJvbSAnY2hhaSc7XG5pbXBvcnQge1Rlc3RpbmdUaW1lfSBmcm9tICcuLi90ZXN0L1Rlc3RpbmdUaW1lJztcbmltcG9ydCB7TG9nZ2VyfSBmcm9tICcuL0xvZ2dlcic7XG5cblRlc3RpbmdUaW1lLmZyZWV6ZSgpO1xuXG5kZXNjcmliZSgnTG9nZ2VyJywgZnVuY3Rpb24oKSB7XG5cbiAgICBpdChcImJhc2ljXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAvLyBGSVhNRTogd2UgY2FuJ3QgY2FwdHVyZSBjb25zb2xlIG91dHB1dCBJIHRoaW5rIGJ1dCBtYXliZSBJIGNhbiBmaWd1cmVcbiAgICAgICAgLy8gb3V0IGluIHRoZSBmdXR1cmUgaG93IHRvIHdyaXRlIGl0IHRvIGEgc3BlY2lmaWMgZmlsZS5cblxuICAgICAgICBjb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbiAgICAgICAgYXNzZXJ0LmVxdWFsKGxvZyAhPSBudWxsLCB0cnVlKTtcblxuICAgIH0pO1xuXG4gICAgaXQoXCJ3aXRoIHR3byBhcmd1bWVudHNcIiwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIC8vIEZJWE1FOiB3ZSBjYW4ndCBjYXB0dXJlIGNvbnNvbGUgb3V0cHV0IEkgdGhpbmsgYnV0IG1heWJlIEkgY2FuIGZpZ3VyZVxuICAgICAgICAvLyBvdXQgaW4gdGhlIGZ1dHVyZSBob3cgdG8gd3JpdGUgaXQgdG8gYSBzcGVjaWZpYyBmaWxlLlxuXG4gICAgICAgIGNvbnN0IGxvZyA9IExvZ2dlci5jcmVhdGUoKTtcblxuICAgICAgICBjb25zdCBoZWxsbyA9IHttc2c6ICdoZWxsbyd9O1xuICAgICAgICBjb25zdCB3b3JsZCA9IHttc2c6ICd3b3JsZCd9O1xuICAgICAgICBsb2cuaW5mbyhcIndpdGggdHdvIGFyZ3VtZW50czpcIiwgaGVsbG8sIHdvcmxkKTtcblxuICAgIH0pO1xuXG5cbiAgICBpdChcIndpdGggZXhjZXB0aW9uXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAvLyBGSVhNRTogd2UgY2FuJ3QgY2FwdHVyZSBjb25zb2xlIG91dHB1dCBJIHRoaW5rIGJ1dCBtYXliZSBJIGNhbiBmaWd1cmVcbiAgICAgICAgLy8gb3V0IGluIHRoZSBmdXR1cmUgaG93IHRvIHdyaXRlIGl0IHRvIGEgc3BlY2lmaWMgZmlsZS5cblxuICAgICAgICBjb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbiAgICAgICAgbG9nLmVycm9yKFwiVGhpcyBpcyBhbiBlcnJvcjogXCIsIG5ldyBFcnJvcignU29tZXRoaW5nIGJyb2tlJykpO1xuXG4gICAgfSk7XG5cbn0pO1xuIl19