"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TraceEvent_1 = require("../../proxies/TraceEvent");
const Preconditions_1 = require("../../Preconditions");
class AnnotationEvent extends TraceEvent_1.TraceEvent {
    constructor(opts = {}) {
        super(opts);
        this.id = opts.id;
        this.docMeta = opts.docMeta;
        this.pageMeta = opts.pageMeta;
        this.pageNum = opts.pageNum;
        this.traceEvent = opts.traceEvent;
        this.container = opts.container;
        if (this.value) {
            this.id = this.value.id;
        }
        else {
            this.id = this.previousValue.id;
        }
        Preconditions_1.Preconditions.assertNotNull(this.pageMeta, "pageMeta");
    }
}
exports.AnnotationEvent = AnnotationEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5ub3RhdGlvbkV2ZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQW5ub3RhdGlvbkV2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseURBQW9EO0FBQ3BELHVEQUFrRDtBQUtsRCxNQUFhLGVBQWdCLFNBQVEsdUJBQVU7SUE0QzNDLFlBQVksT0FBWSxFQUFFO1FBRXRCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVaLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzlCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDbEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBRWhDLElBQUcsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNYLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDM0I7YUFBTTtZQUNILElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7U0FDbkM7UUFFRCw2QkFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRTNELENBQUM7Q0FFSjtBQWpFRCwwQ0FpRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RyYWNlRXZlbnR9IGZyb20gJy4uLy4uL3Byb3hpZXMvVHJhY2VFdmVudCc7XG5pbXBvcnQge1ByZWNvbmRpdGlvbnN9IGZyb20gJy4uLy4uL1ByZWNvbmRpdGlvbnMnO1xuaW1wb3J0IHtQYWdlTWV0YX0gZnJvbSAnLi4vLi4vbWV0YWRhdGEvUGFnZU1ldGEnO1xuaW1wb3J0IHtEb2NNZXRhfSBmcm9tICcuLi8uLi9tZXRhZGF0YS9Eb2NNZXRhJztcbmltcG9ydCB7Q29udGFpbmVyfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbnRhaW5lcnMvQ29udGFpbmVyJztcblxuZXhwb3J0IGNsYXNzIEFubm90YXRpb25FdmVudCBleHRlbmRzIFRyYWNlRXZlbnQge1xuXG5cbiAgICAvKipcbiAgICAgKiBUaGUgSUQgZm9yIHRoaXMgYW5ub3RhdGlvbi5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHVibGljIGlkOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEB0eXBlIHtEb2NNZXRhfVxuICAgICAqL1xuICAgIHB1YmxpYyBkb2NNZXRhOiBEb2NNZXRhO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAdHlwZSB7UGFnZU1ldGF9XG4gICAgICovXG4gICAgcHVibGljIHBhZ2VNZXRhOiBQYWdlTWV0YTtcblxuICAgIC8qKlxuICAgICAqIFRoZSBwYWdlIHdlJ3JlIHdvcmtpbmcgd2l0aC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtudW1iZXJ9XG4gICAgICovXG4gICAgcHVibGljIHBhZ2VOdW06IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIFRoZSByYXcgVHJhY2VFdmVudCBmb3IgdGhpcyBhbm5vdGF0aW9uLlxuICAgICAqXG4gICAgICogQHR5cGUge1RyYWNlRXZlbnR9XG4gICAgICovXG4gICAgcHVibGljIHRyYWNlRXZlbnQ6IFRyYWNlRXZlbnQ7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29udGFpbmVyIHdoaWNoIGhvbGRzIHRoaXMgYW5ub3RhdGlvbi5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtDb250YWluZXJ9XG4gICAgICovXG4gICAgcHVibGljIGNvbnRhaW5lcjogQ29udGFpbmVyO1xuXG5cbiAgICBjb25zdHJ1Y3RvcihvcHRzOiBhbnkgPSB7fSkge1xuXG4gICAgICAgIHN1cGVyKG9wdHMpO1xuXG4gICAgICAgIHRoaXMuaWQgPSBvcHRzLmlkO1xuICAgICAgICB0aGlzLmRvY01ldGEgPSBvcHRzLmRvY01ldGE7XG4gICAgICAgIHRoaXMucGFnZU1ldGEgPSBvcHRzLnBhZ2VNZXRhO1xuICAgICAgICB0aGlzLnBhZ2VOdW0gPSBvcHRzLnBhZ2VOdW07XG4gICAgICAgIHRoaXMudHJhY2VFdmVudCA9IG9wdHMudHJhY2VFdmVudDtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBvcHRzLmNvbnRhaW5lcjtcblxuICAgICAgICBpZih0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLmlkID0gdGhpcy52YWx1ZS5pZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaWQgPSB0aGlzLnByZXZpb3VzVmFsdWUuaWQ7XG4gICAgICAgIH1cblxuICAgICAgICBQcmVjb25kaXRpb25zLmFzc2VydE5vdE51bGwodGhpcy5wYWdlTWV0YSwgXCJwYWdlTWV0YVwiKTtcblxuICAgIH1cblxufVxuIl19