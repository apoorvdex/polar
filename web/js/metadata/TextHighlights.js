"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TextHighlightRecords_1 = require("./TextHighlightRecords");
const TextRect_1 = require("./TextRect");
const Preconditions_1 = require("../Preconditions");
const Screenshots_1 = require("./Screenshots");
class TextHighlights {
    static createMockTextHighlight() {
        let rects = [{ top: 100, left: 100, right: 200, bottom: 200, width: 100, height: 100 }];
        let textSelections = [new TextRect_1.TextRect({ text: "hello world" })];
        let text = "hello world";
        return TextHighlightRecords_1.TextHighlightRecords.create(rects, textSelections, { TEXT: text }).value;
    }
    static attachImage(textHighlight, image) {
        textHighlight.images[Preconditions_1.notNull(image.rel)] = image;
    }
    static deleteTextHighlight(pageMeta, textHighlight) {
        if (textHighlight.images) {
            Object.values(textHighlight.images).forEach(image => {
                const screenshotURI = Screenshots_1.Screenshots.parseURI(image.src);
                if (screenshotURI) {
                    delete pageMeta.screenshots[screenshotURI.id];
                }
            });
        }
        delete pageMeta.textHighlights[textHighlight.id];
    }
}
exports.TextHighlights = TextHighlights;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dEhpZ2hsaWdodHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJUZXh0SGlnaGxpZ2h0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlFQUE0RDtBQUU1RCx5Q0FBb0M7QUFHcEMsb0RBQXlDO0FBRXpDLCtDQUEwQztBQUUxQyxNQUFhLGNBQWM7SUFNdkIsTUFBTSxDQUFDLHVCQUF1QjtRQUUxQixJQUFJLEtBQUssR0FBWSxDQUFFLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO1FBQ2hHLElBQUksY0FBYyxHQUFHLENBQUMsSUFBSSxtQkFBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLGFBQWEsRUFBQyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLElBQUksR0FBRyxhQUFhLENBQUM7UUFHekIsT0FBTywyQ0FBb0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUVsRixDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVcsQ0FBQyxhQUE0QixFQUFFLEtBQVk7UUFDaEUsYUFBYSxDQUFDLE1BQU0sQ0FBQyx1QkFBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNyRCxDQUFDO0lBRU0sTUFBTSxDQUFDLG1CQUFtQixDQUFDLFFBQWtCLEVBQUUsYUFBNEI7UUFFOUUsSUFBSSxhQUFhLENBQUMsTUFBTSxFQUFFO1lBRXRCLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFFaEQsTUFBTSxhQUFhLEdBQUcseUJBQVcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUV0RCxJQUFJLGFBQWEsRUFBRTtvQkFDZixPQUFPLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUNqRDtZQUVMLENBQUMsQ0FBQyxDQUFDO1NBRU47UUFFRCxPQUFPLFFBQVEsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXJELENBQUM7Q0FFSjtBQXpDRCx3Q0F5Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RleHRIaWdobGlnaHRSZWNvcmRzfSBmcm9tICcuL1RleHRIaWdobGlnaHRSZWNvcmRzJztcbmltcG9ydCB7SVJlY3R9IGZyb20gJy4uL3V0aWwvcmVjdHMvSVJlY3QnO1xuaW1wb3J0IHtUZXh0UmVjdH0gZnJvbSAnLi9UZXh0UmVjdCc7XG5pbXBvcnQge1RleHRIaWdobGlnaHR9IGZyb20gJy4vVGV4dEhpZ2hsaWdodCc7XG5pbXBvcnQge0ltYWdlfSBmcm9tICcuL0ltYWdlJztcbmltcG9ydCB7bm90TnVsbH0gZnJvbSAnLi4vUHJlY29uZGl0aW9ucyc7XG5pbXBvcnQge1BhZ2VNZXRhfSBmcm9tICcuL1BhZ2VNZXRhJztcbmltcG9ydCB7U2NyZWVuc2hvdHN9IGZyb20gJy4vU2NyZWVuc2hvdHMnO1xuXG5leHBvcnQgY2xhc3MgVGV4dEhpZ2hsaWdodHMge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbW9jayB0ZXh0IGhpZ2hsaWdodCBmb3IgdGVzdGluZy5cbiAgICAgKiBAcmV0dXJuIHsqfVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVNb2NrVGV4dEhpZ2hsaWdodCgpIHtcblxuICAgICAgICBsZXQgcmVjdHM6IElSZWN0W10gPSBbIHt0b3A6IDEwMCwgbGVmdDogMTAwLCByaWdodDogMjAwLCBib3R0b206IDIwMCwgd2lkdGg6IDEwMCwgaGVpZ2h0OiAxMDB9XTtcbiAgICAgICAgbGV0IHRleHRTZWxlY3Rpb25zID0gW25ldyBUZXh0UmVjdCh7dGV4dDogXCJoZWxsbyB3b3JsZFwifSldO1xuICAgICAgICBsZXQgdGV4dCA9IFwiaGVsbG8gd29ybGRcIjtcblxuICAgICAgICAvLyBjcmVhdGUgYSBiYXNpYyBUZXh0SGlnaGxpZ2h0IG9iamVjdC4uXG4gICAgICAgIHJldHVybiBUZXh0SGlnaGxpZ2h0UmVjb3Jkcy5jcmVhdGUocmVjdHMsIHRleHRTZWxlY3Rpb25zLCB7VEVYVDogdGV4dH0pLnZhbHVlO1xuXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBhdHRhY2hJbWFnZSh0ZXh0SGlnaGxpZ2h0OiBUZXh0SGlnaGxpZ2h0LCBpbWFnZTogSW1hZ2UpIHtcbiAgICAgICAgdGV4dEhpZ2hsaWdodC5pbWFnZXNbbm90TnVsbChpbWFnZS5yZWwpXSA9IGltYWdlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZGVsZXRlVGV4dEhpZ2hsaWdodChwYWdlTWV0YTogUGFnZU1ldGEsIHRleHRIaWdobGlnaHQ6IFRleHRIaWdobGlnaHQpIHtcblxuICAgICAgICBpZiAodGV4dEhpZ2hsaWdodC5pbWFnZXMpIHtcblxuICAgICAgICAgICAgT2JqZWN0LnZhbHVlcyh0ZXh0SGlnaGxpZ2h0LmltYWdlcykuZm9yRWFjaChpbWFnZSA9PiB7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBzY3JlZW5zaG90VVJJID0gU2NyZWVuc2hvdHMucGFyc2VVUkkoaW1hZ2Uuc3JjKTtcblxuICAgICAgICAgICAgICAgIGlmIChzY3JlZW5zaG90VVJJKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwYWdlTWV0YS5zY3JlZW5zaG90c1tzY3JlZW5zaG90VVJJLmlkXTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgICBkZWxldGUgcGFnZU1ldGEudGV4dEhpZ2hsaWdodHNbdGV4dEhpZ2hsaWdodC5pZF07XG5cbiAgICB9XG5cbn1cbiJdfQ==