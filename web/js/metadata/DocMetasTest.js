"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const DocMeta_1 = require("./DocMeta");
const DocMetas_1 = require("./DocMetas");
const MetadataSerializer_1 = require("./MetadataSerializer");
const Assertions_1 = require("../test/Assertions");
const PagemarkType_1 = require("./PagemarkType");
const TestingTime_1 = require("../test/TestingTime");
const TextHighlights_1 = require("./TextHighlights");
const Proxies_1 = require("../proxies/Proxies");
TestingTime_1.TestingTime.freeze();
describe('DocMetas', function () {
    describe('JSON', function () {
        it("Test basic JSON encoding and decoding", function () {
            const fingerprint = "0x001";
            const docMeta = DocMetas_1.DocMetas.createWithinInitialPagemarks(fingerprint, 14);
            DocMetas_1.DocMetas.addPagemarks(docMeta, { nrPages: 1, offsetPage: 4, percentage: 50 });
            const json = MetadataSerializer_1.MetadataSerializer.serialize(docMeta, "  ");
            const actual = DocMetas_1.DocMetas.deserialize(json, fingerprint);
            Assertions_1.assertJSON(docMeta, actual);
            chai_1.assert.equal(actual instanceof DocMeta_1.DocMeta, true);
        });
        it("Test with default values for serialized data", function () {
            const json = "{}";
            const docMeta = DocMetas_1.DocMetas.deserialize(json, '0x000');
            chai_1.assert.equal(docMeta instanceof DocMeta_1.DocMeta, true);
        });
    });
    describe('Deserialize', function () {
        it("Test Deserializing and then updating some pagemarks", function () {
            const fingerprint = "0x001";
            const nrPages = 2;
            let docMeta = DocMetas_1.DocMetas.createWithinInitialPagemarks(fingerprint, nrPages);
            docMeta.docInfo.uuid = "__canonicalized__";
            const json = DocMetas_1.DocMetas.serialize(docMeta, "  ");
            const expected = {
                "annotationInfo": {},
                "version": 2,
                "attachments": {},
                "docInfo": {
                    "progress": 100,
                    "pagemarkType": "SINGLE_COLUMN",
                    "properties": {},
                    "archived": false,
                    "flagged": false,
                    "tags": {},
                    "nrPages": 2,
                    "fingerprint": "0x001",
                    "added": "2012-03-02T11:38:49.321Z",
                    "uuid": "__canonicalized__",
                    "readingPerDay": {
                        "2012-03-02": 2
                    },
                },
                "pageMetas": {
                    "1": {
                        "pagemarks": {
                            "12CDjpvoCY": {
                                "id": "12CDjpvoCY",
                                "created": "2012-03-02T11:38:49.321Z",
                                "lastUpdated": "2012-03-02T11:38:49.321Z",
                                "type": "SINGLE_COLUMN",
                                "percentage": 100,
                                "column": 0,
                                "rect": {
                                    "left": 0,
                                    "top": 0,
                                    "width": 100,
                                    "height": 100
                                },
                                "batch": "1TLPYPE5XU",
                                "mode": "READ",
                                "notes": {}
                            }
                        },
                        "notes": {},
                        "comments": {},
                        "questions": {},
                        "readingProgress": {
                            "136SMQ5mZM": {
                                "created": "2012-03-02T11:38:49.321Z",
                                "id": "136SMQ5mZM",
                                "progress": 100,
                                "progressByMode": {
                                    "READ": 100,
                                }
                            }
                        },
                        "flashcards": {},
                        "textHighlights": {},
                        "areaHighlights": {},
                        "screenshots": {},
                        "thumbnails": {},
                        "pageInfo": {
                            "num": 1
                        }
                    },
                    "2": {
                        "pagemarks": {
                            "12wfHNWzGf": {
                                "id": "12wfHNWzGf",
                                "created": "2012-03-02T11:38:49.321Z",
                                "lastUpdated": "2012-03-02T11:38:49.321Z",
                                "type": "SINGLE_COLUMN",
                                "percentage": 100,
                                "column": 0,
                                "rect": {
                                    "left": 0,
                                    "top": 0,
                                    "width": 100,
                                    "height": 100
                                },
                                "batch": "12r4saWMd2",
                                "mode": "READ",
                                "notes": {}
                            }
                        },
                        "notes": {},
                        "comments": {},
                        "questions": {},
                        "readingProgress": {
                            "145xgms7VH": {
                                "created": "2012-03-02T11:38:49.321Z",
                                "id": "145xgms7VH",
                                "progress": 100,
                                "progressByMode": {
                                    "READ": 100,
                                }
                            }
                        },
                        "flashcards": {},
                        "textHighlights": {},
                        "areaHighlights": {},
                        "screenshots": {},
                        "thumbnails": {},
                        "pageInfo": {
                            "num": 2
                        }
                    }
                }
            };
            chai_1.assert.equal(typeof json, "string");
            Assertions_1.assertJSON(json, expected);
            docMeta = DocMetas_1.DocMetas.deserialize(json, fingerprint);
            docMeta = Proxies_1.Proxies.create(docMeta);
            Assertions_1.assertJSON(docMeta, expected);
            const pageMeta = docMeta.getPageMeta(1);
            pageMeta.pagemarks = {};
            chai_1.assert.deepEqual(docMeta.getPageMeta(1).pagemarks, {});
        });
    });
    describe('Upgrade', function () {
        describe("Test upgrading the metadata if it is missing fields.", function () {
            it("No DocInfo.pagemarkType", function () {
                let docMeta = createUpgradeDoc();
                chai_1.assert.notEqual(docMeta.docInfo, null);
                delete docMeta.getPageMeta(1).textHighlights;
                delete docMeta.docInfo.pagemarkType;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                chai_1.assert.deepEqual(docMeta.docInfo.pagemarkType, PagemarkType_1.PagemarkType.SINGLE_COLUMN);
            });
            it("Pagemark without rect", function () {
                let docMeta = createUpgradeDoc();
                console.log(Object.keys(docMeta.getPageMeta(1).pagemarks));
                delete docMeta.getPageMeta(1).pagemarks["1hajrtFtkP"].rect;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                const expected = {
                    "1hajrtFtkP": {
                        "id": "1hajrtFtkP",
                        "created": "2012-03-02T11:38:49.321Z",
                        "lastUpdated": "2012-03-02T11:38:49.321Z",
                        "type": "SINGLE_COLUMN",
                        "percentage": 100,
                        "column": 0,
                        "batch": "1jQboVWxtJ",
                        "mode": "READ",
                        "notes": {},
                        "rect": {
                            "left": 0,
                            "top": 0,
                            "width": 100,
                            "height": 100
                        }
                    }
                };
                Assertions_1.assertJSON(docMeta.getPageMeta(1).pagemarks, expected);
            });
            it("No text highlights", function () {
                let docMeta = createUpgradeDoc();
                delete docMeta.getPageMeta(1).textHighlights;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                chai_1.assert.deepEqual(docMeta.getPageMeta(1).textHighlights, {});
            });
            it("No pagemarks", function () {
                let docMeta = createUpgradeDoc();
                delete docMeta.getPageMeta(1).pagemarks;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                chai_1.assert.deepEqual(docMeta.getPageMeta(1).pagemarks, {});
            });
            it("No id on pagemarks", function () {
                let docMeta = createUpgradeDoc();
                console.log(JSON.stringify(docMeta.getPageMeta(1).pagemarks, null, "  "));
                console.log(Object.keys(docMeta.getPageMeta(1).pagemarks));
                (docMeta.getPageMeta(1).pagemarks["12cyUyU3s3"].id) = null;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                const expected = {
                    "12cyUyU3s3": {
                        "id": "12cyUyU3s3",
                        "created": "2012-03-02T11:38:49.321Z",
                        "lastUpdated": "2012-03-02T11:38:49.321Z",
                        "type": "SINGLE_COLUMN",
                        "percentage": 100,
                        "column": 0,
                        "rect": {
                            "left": 0,
                            "top": 0,
                            "width": 100,
                            "height": 100
                        },
                        "batch": "1ZUGnh2R1J",
                        "mode": "READ",
                        "notes": {},
                    }
                };
                Assertions_1.assertJSON(docMeta.getPageMeta(1).pagemarks, expected);
            });
            it("No id on text highlights", function () {
                let docMeta = createUpgradeDoc();
                delete docMeta.getPageMeta(1).textHighlights["12pNUv1Y9S"].id;
                docMeta = DocMetas_1.DocMetas.upgrade(docMeta);
                const expected = {
                    "12pNUv1Y9S": {
                        "guid": "12pNUv1Y9S",
                        "created": "2012-03-02T11:38:49.321Z",
                        "lastUpdated": "2012-03-02T11:38:49.321Z",
                        "rects": {
                            "0": {
                                "top": 100,
                                "left": 100,
                                "right": 200,
                                "bottom": 200,
                                "width": 100,
                                "height": 100
                            }
                        },
                        "textSelections": {
                            "0": {
                                "text": "hello world",
                                "rect": null
                            }
                        },
                        "text": {
                            "TEXT": "hello world"
                        },
                        "images": {},
                        "notes": {},
                        "questions": {},
                        "flashcards": {},
                        "color": "yellow",
                        "id": "1cAbqEAHny"
                    }
                };
                Assertions_1.assertJSON(docMeta.getPageMeta(1).textHighlights, expected);
            });
        });
    });
});
function createUpgradeDoc() {
    const fingerprint = "0x001";
    const nrPages = 1;
    const docMeta = DocMetas_1.DocMetas.createWithinInitialPagemarks(fingerprint, nrPages);
    const textHighlight = TextHighlights_1.TextHighlights.createMockTextHighlight();
    docMeta.getPageMeta(1).textHighlights[textHighlight.id] = textHighlight;
    return docMeta;
}
//# sourceMappingURL=data:application/json;base64,