"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SerializedObject_1 = require("./SerializedObject");
const Preconditions_1 = require("../Preconditions");
class MetadataSerializer {
    static serialize(object, spacing = "") {
        return JSON.stringify(object, null, spacing);
    }
    static deserialize(obj, data) {
        Preconditions_1.Preconditions.assertPresent(data, 'data');
        if (!(typeof data === "string")) {
            throw new Error("We can only deserialize strings: " + typeof data);
        }
        const parsed = JSON.parse(data);
        Object.assign(obj, parsed);
        return obj;
    }
    static replacer(key, value) {
        if (value instanceof SerializedObject_1.SerializedObject) {
            value.setup();
            value.validate();
        }
        return value;
    }
    static reviver(key, value) {
        if (value instanceof SerializedObject_1.SerializedObject) {
            value.setup();
            value.validate();
        }
        return value;
    }
}
exports.MetadataSerializer = MetadataSerializer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0YWRhdGFTZXJpYWxpemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTWV0YWRhdGFTZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUEseURBQW9EO0FBQ3BELG9EQUErQztBQUUvQyxNQUFhLGtCQUFrQjtJQUVwQixNQUFNLENBQUMsU0FBUyxDQUFDLE1BQVcsRUFBRSxVQUFrQixFQUFFO1FBR3JELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFRTSxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQVEsRUFBRSxJQUFZO1FBRTVDLDZCQUFhLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUUsQ0FBQyxPQUFPLElBQUksS0FBSyxRQUFRLENBQUMsRUFBRTtZQUU5QixNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxHQUFHLE9BQU8sSUFBSSxDQUFDLENBQUM7U0FDdEU7UUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLE9BQU8sR0FBRyxDQUFDO0lBRWYsQ0FBQztJQUVPLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBVyxFQUFFLEtBQVU7UUFFM0MsSUFBSSxLQUFLLFlBQVksbUNBQWdCLEVBQUU7WUFDbkMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2QsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3BCO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFFakIsQ0FBQztJQUVPLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBVyxFQUFFLEtBQVU7UUFFMUMsSUFBSSxLQUFLLFlBQVksbUNBQWdCLEVBQUU7WUFDbkMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2QsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3BCO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFFakIsQ0FBQztDQUVKO0FBbkRELGdEQW1EQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWxsIEpTT04gbXVzdCBnbyB0aHJvdWdoIHRoZSBtZXRhZGF0YSBzZXJpYWxpemVyIHNvIHdlIGNhbiBoYW5kbGUgcHJvcGVyXG4gKiBzZXJpYWxpemF0aW9uIGJ1dCBhbHNvIG9iamVjdCB2YWxpZGF0aW9uIG9uY2UgdGhleSBhcmUgZGVzZXJpYWxpemVkLlxuICovXG5pbXBvcnQge1NlcmlhbGl6ZWRPYmplY3R9IGZyb20gJy4vU2VyaWFsaXplZE9iamVjdCc7XG5pbXBvcnQge1ByZWNvbmRpdGlvbnN9IGZyb20gJy4uL1ByZWNvbmRpdGlvbnMnO1xuXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFTZXJpYWxpemVyIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgc2VyaWFsaXplKG9iamVjdDogYW55LCBzcGFjaW5nOiBzdHJpbmcgPSBcIlwiKSB7XG4gICAgICAgIC8vIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmplY3QsIE1ldGFkYXRhU2VyaWFsaXplci5yZXBsYWNlciwgXCJcIik7XG5cbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iamVjdCwgbnVsbCwgc3BhY2luZyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2l2ZW4gYW4gaW5zdGFuY2Ugb2YgYW4gb2JqZWN0LCBhbmQgYSBKU09OIHN0cmluZywgZGVzZXJpYWxpemUgdGhlIHN0cmluZyBpbnRvXG4gICAgICogdGhlIG9iamVjdC5cbiAgICAgKiBAcGFyYW0gb2JqZWN0IHtPYmplY3R9IHRoZSBvYmplY3Qgd2hpY2ggc2hvdWxkIGJlIHJldHVybmVkIGFmdGVyIGRlc2VyaWFsaXppbmcuXG4gICAgICogQHBhcmFtIGRhdGFcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGRlc2VyaWFsaXplKG9iajogYW55LCBkYXRhOiBzdHJpbmcpIHtcblxuICAgICAgICBQcmVjb25kaXRpb25zLmFzc2VydFByZXNlbnQoZGF0YSwgJ2RhdGEnKTtcblxuICAgICAgICBpZiAoISAodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIpKSB7XG4gICAgICAgICAgICAvLyBleHRyYSBjaGVjayB3aGVuIGNhbGxlZCBmcm9tIEpTXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJXZSBjYW4gb25seSBkZXNlcmlhbGl6ZSBzdHJpbmdzOiBcIiArIHR5cGVvZiBkYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCBwYXJzZWQpO1xuICAgICAgICByZXR1cm4gb2JqO1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVwbGFjZXIoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcblxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBTZXJpYWxpemVkT2JqZWN0KSB7XG4gICAgICAgICAgICB2YWx1ZS5zZXR1cCgpO1xuICAgICAgICAgICAgdmFsdWUudmFsaWRhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcblxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIHJldml2ZXIoa2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcblxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBTZXJpYWxpemVkT2JqZWN0KSB7XG4gICAgICAgICAgICB2YWx1ZS5zZXR1cCgpO1xuICAgICAgICAgICAgdmFsdWUudmFsaWRhdGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZTtcblxuICAgIH1cblxufVxuIl19