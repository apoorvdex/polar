"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TestingTime_1 = require("../test/TestingTime");
const TextHighlightRecords_1 = require("./TextHighlightRecords");
const Assertions_1 = require("../test/Assertions");
const Rect_1 = require("../Rect");
TestingTime_1.TestingTime.freeze();
describe('TextHighlightRecords', function () {
    describe('create', function () {
        it("basic", function () {
            let rects = [new Rect_1.Rect({ top: 100, left: 100, right: 200, bottom: 200, width: 100, height: 100 })];
            let textSelections = [{ text: "hello world" }];
            let text = "hello world";
            let textHighlightRecord = TextHighlightRecords_1.TextHighlightRecords.create(rects, textSelections, { TEXT: text });
            let expected = {
                "id": "1Af41QXbBH",
                "value": {
                    "id": "1Af41QXbBH",
                    "guid": "1Af41QXbBH",
                    "created": "2012-03-02T11:38:49.321Z",
                    "lastUpdated": "2012-03-02T11:38:49.321Z",
                    "rects": {
                        "0": {
                            "left": 100,
                            "top": 100,
                            "right": 200,
                            "bottom": 200,
                            "width": 100,
                            "height": 100
                        }
                    },
                    "textSelections": {
                        "0": {
                            "text": "hello world"
                        }
                    },
                    "text": {
                        "TEXT": "hello world"
                    },
                    "images": {},
                    "notes": {},
                    "questions": {},
                    "flashcards": {},
                    "color": "yellow"
                }
            };
            Assertions_1.assertJSON(textHighlightRecord, expected);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dEhpZ2hsaWdodFJlY29yZHNUZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVGV4dEhpZ2hsaWdodFJlY29yZHNUZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscURBQWdEO0FBQ2hELGlFQUE0RDtBQUM1RCxtREFBOEM7QUFDOUMsa0NBQTZCO0FBRzdCLHlCQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFckIsUUFBUSxDQUFDLHNCQUFzQixFQUFFO0lBRTdCLFFBQVEsQ0FBQyxRQUFRLEVBQUU7UUFFZixFQUFFLENBQUMsT0FBTyxFQUFFO1lBRVIsSUFBSSxLQUFLLEdBQVcsQ0FBRSxJQUFJLFdBQUksQ0FBQyxFQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pHLElBQUksY0FBYyxHQUFlLENBQUMsRUFBQyxJQUFJLEVBQUUsYUFBYSxFQUFDLENBQUMsQ0FBQztZQUN6RCxJQUFJLElBQUksR0FBRyxhQUFhLENBQUM7WUFHekIsSUFBSSxtQkFBbUIsR0FBRywyQ0FBb0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRSxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1lBRTNGLElBQUksUUFBUSxHQUFHO2dCQUNYLElBQUksRUFBRSxZQUFZO2dCQUNsQixPQUFPLEVBQUU7b0JBQ0wsSUFBSSxFQUFFLFlBQVk7b0JBQ2xCLE1BQU0sRUFBRSxZQUFZO29CQUNwQixTQUFTLEVBQUUsMEJBQTBCO29CQUNyQyxhQUFhLEVBQUUsMEJBQTBCO29CQUN6QyxPQUFPLEVBQUU7d0JBQ0wsR0FBRyxFQUFFOzRCQUNELE1BQU0sRUFBRSxHQUFHOzRCQUNYLEtBQUssRUFBRSxHQUFHOzRCQUNWLE9BQU8sRUFBRSxHQUFHOzRCQUNaLFFBQVEsRUFBRSxHQUFHOzRCQUNiLE9BQU8sRUFBRSxHQUFHOzRCQUNaLFFBQVEsRUFBRSxHQUFHO3lCQUNoQjtxQkFDSjtvQkFDRCxnQkFBZ0IsRUFBRTt3QkFDZCxHQUFHLEVBQUU7NEJBQ0QsTUFBTSxFQUFFLGFBQWE7eUJBQ3hCO3FCQUNKO29CQUNELE1BQU0sRUFBRTt3QkFDSixNQUFNLEVBQUUsYUFBYTtxQkFDeEI7b0JBQ0QsUUFBUSxFQUFFLEVBQUU7b0JBQ1osT0FBTyxFQUFFLEVBQUU7b0JBQ1gsV0FBVyxFQUFFLEVBQUU7b0JBQ2YsWUFBWSxFQUFFLEVBQUU7b0JBQ2hCLE9BQU8sRUFBRSxRQUFRO2lCQUNwQjthQUNKLENBQUM7WUFFRix1QkFBVSxDQUFDLG1CQUFtQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRTlDLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VGVzdGluZ1RpbWV9IGZyb20gJy4uL3Rlc3QvVGVzdGluZ1RpbWUnO1xuaW1wb3J0IHtUZXh0SGlnaGxpZ2h0UmVjb3Jkc30gZnJvbSAnLi9UZXh0SGlnaGxpZ2h0UmVjb3Jkcyc7XG5pbXBvcnQge2Fzc2VydEpTT059IGZyb20gJy4uL3Rlc3QvQXNzZXJ0aW9ucyc7XG5pbXBvcnQge1JlY3R9IGZyb20gJy4uL1JlY3QnO1xuaW1wb3J0IHtUZXh0UmVjdH0gZnJvbSAnLi9UZXh0UmVjdCc7XG5cblRlc3RpbmdUaW1lLmZyZWV6ZSgpO1xuXG5kZXNjcmliZSgnVGV4dEhpZ2hsaWdodFJlY29yZHMnLCBmdW5jdGlvbigpIHtcblxuICAgIGRlc2NyaWJlKCdjcmVhdGUnLCBmdW5jdGlvbigpIHtcblxuICAgICAgICBpdChcImJhc2ljXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgbGV0IHJlY3RzOiBSZWN0W10gPSBbIG5ldyBSZWN0KHt0b3A6IDEwMCwgbGVmdDogMTAwLCByaWdodDogMjAwLCBib3R0b206IDIwMCwgd2lkdGg6IDEwMCwgaGVpZ2h0OiAxMDB9KV07XG4gICAgICAgICAgICBsZXQgdGV4dFNlbGVjdGlvbnM6IFRleHRSZWN0W10gPSBbe3RleHQ6IFwiaGVsbG8gd29ybGRcIn1dO1xuICAgICAgICAgICAgbGV0IHRleHQgPSBcImhlbGxvIHdvcmxkXCI7XG5cbiAgICAgICAgICAgIC8vIGNyZWF0ZSBhIGJhc2ljIFRleHRIaWdobGlnaHQgb2JqZWN0Li5cbiAgICAgICAgICAgIGxldCB0ZXh0SGlnaGxpZ2h0UmVjb3JkID0gVGV4dEhpZ2hsaWdodFJlY29yZHMuY3JlYXRlKHJlY3RzLCB0ZXh0U2VsZWN0aW9ucywge1RFWFQ6IHRleHR9KTtcblxuICAgICAgICAgICAgbGV0IGV4cGVjdGVkID0ge1xuICAgICAgICAgICAgICAgIFwiaWRcIjogXCIxQWY0MVFYYkJIXCIsXG4gICAgICAgICAgICAgICAgXCJ2YWx1ZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCIxQWY0MVFYYkJIXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZ3VpZFwiOiBcIjFBZjQxUVhiQkhcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVkXCI6IFwiMjAxMi0wMy0wMlQxMTozODo0OS4zMjFaXCIsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdFVwZGF0ZWRcIjogXCIyMDEyLTAzLTAyVDExOjM4OjQ5LjMyMVpcIixcbiAgICAgICAgICAgICAgICAgICAgXCJyZWN0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIjBcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGVmdFwiOiAxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0b3BcIjogMTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicmlnaHRcIjogMjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYm90dG9tXCI6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIndpZHRoXCI6IDEwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImhlaWdodFwiOiAxMDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0ZXh0U2VsZWN0aW9uc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIjBcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwidGV4dFwiOiBcImhlbGxvIHdvcmxkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0ZXh0XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiVEVYVFwiOiBcImhlbGxvIHdvcmxkXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJpbWFnZXNcIjoge30sXG4gICAgICAgICAgICAgICAgICAgIFwibm90ZXNcIjoge30sXG4gICAgICAgICAgICAgICAgICAgIFwicXVlc3Rpb25zXCI6IHt9LFxuICAgICAgICAgICAgICAgICAgICBcImZsYXNoY2FyZHNcIjoge30sXG4gICAgICAgICAgICAgICAgICAgIFwiY29sb3JcIjogXCJ5ZWxsb3dcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGFzc2VydEpTT04odGV4dEhpZ2hsaWdodFJlY29yZCwgZXhwZWN0ZWQpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG5cbn0pO1xuIl19