"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AnnotationDescriptor_1 = require("./AnnotationDescriptor");
const AnnotationTypes_1 = require("./AnnotationTypes");
const Attributes_1 = require("../util/Attributes");
class AnnotationDescriptors {
    static createFromElement(element) {
        const dataAttributes = Attributes_1.Attributes.dataToStringMap(element);
        if (!dataAttributes['annotationType']) {
            return undefined;
        }
        let annotationTypeStr = dataAttributes['annotationType'].replace("-", "_").toUpperCase();
        let annotationType = AnnotationTypes_1.AnnotationTypes.fromString(annotationTypeStr);
        let id = dataAttributes['annotationId'];
        let docFingerprint = dataAttributes['annotationDocFingerprint'];
        let pageNum = parseInt(dataAttributes['annotationPageNum']);
        return AnnotationDescriptor_1.AnnotationDescriptor.newInstance(annotationType, id, docFingerprint, pageNum);
    }
    static createFromObject(obj) {
        const result = new AnnotationDescriptor_1.AnnotationDescriptor(obj);
        return Object.freeze(result);
    }
}
exports.AnnotationDescriptors = AnnotationDescriptors;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5ub3RhdGlvbkRlc2NyaXB0b3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQW5ub3RhdGlvbkRlc2NyaXB0b3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUVBQTREO0FBQzVELHVEQUFrRDtBQUNsRCxtREFBOEM7QUFFOUMsTUFBYSxxQkFBcUI7SUFFdkIsTUFBTSxDQUFDLGlCQUFpQixDQUFDLE9BQW9CO1FBRWhELE1BQU0sY0FBYyxHQUFHLHVCQUFVLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTNELElBQUksQ0FBRSxjQUFjLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtZQUNwQyxPQUFPLFNBQVMsQ0FBQztTQUNwQjtRQUVELElBQUksaUJBQWlCLEdBQUcsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUV6RixJQUFJLGNBQWMsR0FBRyxpQ0FBZSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ25FLElBQUksRUFBRSxHQUFHLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN4QyxJQUFJLGNBQWMsR0FBRyxjQUFjLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUNoRSxJQUFJLE9BQU8sR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQztRQUU1RCxPQUFPLDJDQUFvQixDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6RixDQUFDO0lBRU0sTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQVE7UUFFbkMsTUFBTSxNQUFNLEdBQUcsSUFBSSwyQ0FBb0IsQ0FBd0IsR0FBRyxDQUFDLENBQUM7UUFFcEUsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWpDLENBQUM7Q0FFSjtBQTdCRCxzREE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Fubm90YXRpb25EZXNjcmlwdG9yfSBmcm9tICcuL0Fubm90YXRpb25EZXNjcmlwdG9yJztcbmltcG9ydCB7QW5ub3RhdGlvblR5cGVzfSBmcm9tICcuL0Fubm90YXRpb25UeXBlcyc7XG5pbXBvcnQge0F0dHJpYnV0ZXN9IGZyb20gJy4uL3V0aWwvQXR0cmlidXRlcyc7XG5cbmV4cG9ydCBjbGFzcyBBbm5vdGF0aW9uRGVzY3JpcHRvcnMge1xuXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVGcm9tRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCk6IEFubm90YXRpb25EZXNjcmlwdG9yIHwgdW5kZWZpbmVkIHtcblxuICAgICAgICBjb25zdCBkYXRhQXR0cmlidXRlcyA9IEF0dHJpYnV0ZXMuZGF0YVRvU3RyaW5nTWFwKGVsZW1lbnQpO1xuXG4gICAgICAgIGlmICghIGRhdGFBdHRyaWJ1dGVzWydhbm5vdGF0aW9uVHlwZSddKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGFubm90YXRpb25UeXBlU3RyID0gZGF0YUF0dHJpYnV0ZXNbJ2Fubm90YXRpb25UeXBlJ10ucmVwbGFjZShcIi1cIiwgXCJfXCIpLnRvVXBwZXJDYXNlKCk7XG5cbiAgICAgICAgbGV0IGFubm90YXRpb25UeXBlID0gQW5ub3RhdGlvblR5cGVzLmZyb21TdHJpbmcoYW5ub3RhdGlvblR5cGVTdHIpO1xuICAgICAgICBsZXQgaWQgPSBkYXRhQXR0cmlidXRlc1snYW5ub3RhdGlvbklkJ107XG4gICAgICAgIGxldCBkb2NGaW5nZXJwcmludCA9IGRhdGFBdHRyaWJ1dGVzWydhbm5vdGF0aW9uRG9jRmluZ2VycHJpbnQnXTtcbiAgICAgICAgbGV0IHBhZ2VOdW0gPSBwYXJzZUludChkYXRhQXR0cmlidXRlc1snYW5ub3RhdGlvblBhZ2VOdW0nXSk7XG5cbiAgICAgICAgcmV0dXJuIEFubm90YXRpb25EZXNjcmlwdG9yLm5ld0luc3RhbmNlKGFubm90YXRpb25UeXBlLCBpZCwgZG9jRmluZ2VycHJpbnQsIHBhZ2VOdW0pO1xuXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVGcm9tT2JqZWN0KG9iajogYW55KTogQW5ub3RhdGlvbkRlc2NyaXB0b3Ige1xuXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBBbm5vdGF0aW9uRGVzY3JpcHRvcig8QW5ub3RhdGlvbkRlc2NyaXB0b3I+IG9iaik7XG5cbiAgICAgICAgcmV0dXJuIE9iamVjdC5mcmVlemUocmVzdWx0KTtcblxuICAgIH1cblxufVxuIl19