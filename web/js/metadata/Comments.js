"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ISODateTimeStrings_1 = require("./ISODateTimeStrings");
const Comment_1 = require("./Comment");
const Hashcodes_1 = require("../Hashcodes");
const TextType_1 = require("./TextType");
const Texts_1 = require("./Texts");
class Comments {
    static createTextComment(text, ref) {
        const content = Texts_1.Texts.create(text, TextType_1.TextType.TEXT);
        const id = Hashcodes_1.Hashcodes.createID(this.SEQUENCE++);
        const created = ISODateTimeStrings_1.ISODateTimeStrings.create();
        const lastUpdated = created;
        return new Comment_1.Comment({ content, id, guid: id, created, lastUpdated, ref });
    }
    static createHTMLComment(text, ref, created, lastUpdated) {
        const content = Texts_1.Texts.create(text, TextType_1.TextType.HTML);
        const id = Hashcodes_1.Hashcodes.createID(this.SEQUENCE++);
        if (!created) {
            created = ISODateTimeStrings_1.ISODateTimeStrings.create();
        }
        if (!lastUpdated) {
            lastUpdated = created;
        }
        return new Comment_1.Comment({ content, id, guid: id, created, lastUpdated, ref });
    }
}
Comments.SEQUENCE = 0;
exports.Comments = Comments;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbWVudHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDb21tZW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZEQUEyRTtBQUMzRSx1Q0FBa0M7QUFDbEMsNENBQXVDO0FBQ3ZDLHlDQUFvQztBQUNwQyxtQ0FBOEI7QUFHOUIsTUFBYSxRQUFRO0lBSVYsTUFBTSxDQUFDLGlCQUFpQixDQUFDLElBQVksRUFBRSxHQUFRO1FBRWxELE1BQU0sT0FBTyxHQUFHLGFBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLG1CQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbEQsTUFBTSxFQUFFLEdBQUcscUJBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDL0MsTUFBTSxPQUFPLEdBQUcsdUNBQWtCLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDNUMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDO1FBRTVCLE9BQU8sSUFBSSxpQkFBTyxDQUFDLEVBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUU1RSxDQUFDO0lBRU0sTUFBTSxDQUFDLGlCQUFpQixDQUFDLElBQVksRUFDWixHQUFRLEVBQ1IsT0FBMkIsRUFDM0IsV0FBK0I7UUFFM0QsTUFBTSxPQUFPLEdBQUcsYUFBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsbUJBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVsRCxNQUFNLEVBQUUsR0FBRyxxQkFBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUUvQyxJQUFJLENBQUUsT0FBTyxFQUFFO1lBQ1gsT0FBTyxHQUFHLHVDQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ3pDO1FBRUQsSUFBSSxDQUFFLFdBQVcsRUFBRTtZQUNmLFdBQVcsR0FBRyxPQUFPLENBQUM7U0FDekI7UUFFRCxPQUFPLElBQUksaUJBQU8sQ0FBQyxFQUFDLE9BQU8sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFFNUUsQ0FBQzs7QUFqQ2EsaUJBQVEsR0FBVyxDQUFDLENBQUM7QUFGdkMsNEJBcUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJU09EYXRlVGltZVN0cmluZywgSVNPRGF0ZVRpbWVTdHJpbmdzfSBmcm9tICcuL0lTT0RhdGVUaW1lU3RyaW5ncyc7XG5pbXBvcnQge0NvbW1lbnR9IGZyb20gJy4vQ29tbWVudCc7XG5pbXBvcnQge0hhc2hjb2Rlc30gZnJvbSAnLi4vSGFzaGNvZGVzJztcbmltcG9ydCB7VGV4dFR5cGV9IGZyb20gJy4vVGV4dFR5cGUnO1xuaW1wb3J0IHtUZXh0c30gZnJvbSAnLi9UZXh0cyc7XG5pbXBvcnQge1JlZn0gZnJvbSAnLi9SZWZzJztcblxuZXhwb3J0IGNsYXNzIENvbW1lbnRzIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgU0VRVUVOQ0U6IG51bWJlciA9IDA7XG5cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZVRleHRDb21tZW50KHRleHQ6IHN0cmluZywgcmVmOiBSZWYpIHtcblxuICAgICAgICBjb25zdCBjb250ZW50ID0gVGV4dHMuY3JlYXRlKHRleHQsIFRleHRUeXBlLlRFWFQpO1xuXG4gICAgICAgIGNvbnN0IGlkID0gSGFzaGNvZGVzLmNyZWF0ZUlEKHRoaXMuU0VRVUVOQ0UrKyk7XG4gICAgICAgIGNvbnN0IGNyZWF0ZWQgPSBJU09EYXRlVGltZVN0cmluZ3MuY3JlYXRlKCk7XG4gICAgICAgIGNvbnN0IGxhc3RVcGRhdGVkID0gY3JlYXRlZDtcblxuICAgICAgICByZXR1cm4gbmV3IENvbW1lbnQoe2NvbnRlbnQsIGlkLCBndWlkOiBpZCwgY3JlYXRlZCwgbGFzdFVwZGF0ZWQsIHJlZiB9KTtcblxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlSFRNTENvbW1lbnQodGV4dDogc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmOiBSZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVkPzogSVNPRGF0ZVRpbWVTdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0VXBkYXRlZD86IElTT0RhdGVUaW1lU3RyaW5nICkge1xuXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBUZXh0cy5jcmVhdGUodGV4dCwgVGV4dFR5cGUuSFRNTCk7XG5cbiAgICAgICAgY29uc3QgaWQgPSBIYXNoY29kZXMuY3JlYXRlSUQodGhpcy5TRVFVRU5DRSsrKTtcblxuICAgICAgICBpZiAoISBjcmVhdGVkKSB7XG4gICAgICAgICAgICBjcmVhdGVkID0gSVNPRGF0ZVRpbWVTdHJpbmdzLmNyZWF0ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCEgbGFzdFVwZGF0ZWQpIHtcbiAgICAgICAgICAgIGxhc3RVcGRhdGVkID0gY3JlYXRlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXcgQ29tbWVudCh7Y29udGVudCwgaWQsIGd1aWQ6IGlkLCBjcmVhdGVkLCBsYXN0VXBkYXRlZCwgcmVmIH0pO1xuXG4gICAgfVxuXG59XG4iXX0=