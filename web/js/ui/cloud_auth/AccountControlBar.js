"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Logger_1 = require("../../logger/Logger");
const Button_1 = __importDefault(require("reactstrap/lib/Button"));
const log = Logger_1.Logger.create();
class AccountControlBar extends react_1.default.PureComponent {
    constructor(props) {
        super(props);
    }
    render() {
        const UserImage = () => {
            if (this.props.userInfo.photoURL) {
                return react_1.default.createElement("div", { style: { height: '100px', width: '100px' } },
                    react_1.default.createElement("img", { className: "rounded border m-auto", style: {
                            maxHeight: '100px',
                            maxWidth: '100px'
                        }, src: this.props.userInfo.photoURL }));
            }
            else {
                return react_1.default.createElement("div", null);
            }
        };
        return (react_1.default.createElement("div", null,
            react_1.default.createElement("div", { style: {
                    display: 'flex',
                    verticalAlign: 'top'
                } },
                react_1.default.createElement("div", { className: "pl-0 p-0 pr-2" },
                    react_1.default.createElement(UserImage, null)),
                react_1.default.createElement("div", { className: "p-1" },
                    react_1.default.createElement("div", { style: { fontWeight: 'bold' } }, this.props.userInfo.displayName || 'Anonymous'),
                    react_1.default.createElement("div", { className: "text-muted", style: { fontSize: "14px" } }, this.props.userInfo.email || ''),
                    react_1.default.createElement("div", { style: { display: 'block', whiteSpace: 'nowrap' }, className: "mt-2" },
                        react_1.default.createElement(Button_1.default, { id: "cloud-sync-invite-users", color: "primary", size: "sm", onClick: () => this.props.onInvite() },
                            react_1.default.createElement("i", { className: "fas fa-user-plus mr-1" }),
                            "Invite Users"),
                        react_1.default.createElement(Button_1.default, { id: "cloud-sync-logout", color: "secondary", outline: true, size: "sm", onClick: () => this.props.onLogout(), className: "ml-1" },
                            react_1.default.createElement("i", { className: "fas fa-sign-out-alt mr-1" }),
                            "Logout"))))));
    }
}
exports.AccountControlBar = AccountControlBar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudENvbnRyb2xCYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBY2NvdW50Q29udHJvbEJhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxrREFBMEI7QUFDMUIsZ0RBQTJDO0FBSTNDLG1FQUEyQztBQUUzQyxNQUFNLEdBQUcsR0FBRyxlQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFNUIsTUFBYSxpQkFBa0IsU0FBUSxlQUFLLENBQUMsYUFBNkI7SUFFdEUsWUFBWSxLQUFhO1FBQ3JCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVqQixDQUFDO0lBRU0sTUFBTTtRQUVULE1BQU0sU0FBUyxHQUFHLEdBQUcsRUFBRTtZQUVuQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRTtnQkFFOUIsT0FBTyx1Q0FBSyxLQUFLLEVBQUUsRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUM7b0JBRWhELHVDQUFLLFNBQVMsRUFBQyx1QkFBdUIsRUFDOUIsS0FBSyxFQUFFOzRCQUNILFNBQVMsRUFBRSxPQUFPOzRCQUNsQixRQUFRLEVBQUUsT0FBTzt5QkFDcEIsRUFDRCxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLENBQzFDLENBQUM7YUFDVjtpQkFBTTtnQkFDSCxPQUFPLDBDQUFNLENBQUM7YUFDakI7UUFFTCxDQUFDLENBQUM7UUFFRixPQUFPLENBRUg7WUFFSSx1Q0FBSyxLQUFLLEVBQUU7b0JBQ1IsT0FBTyxFQUFFLE1BQU07b0JBQ2YsYUFBYSxFQUFFLEtBQUs7aUJBQ3ZCO2dCQUVHLHVDQUFLLFNBQVMsRUFBQyxlQUFlO29CQUUxQiw4QkFBQyxTQUFTLE9BQUUsQ0FFVjtnQkFFTix1Q0FBSyxTQUFTLEVBQUMsS0FBSztvQkFFaEIsdUNBQUssS0FBSyxFQUFFLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBQyxJQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxXQUFXLElBQUksV0FBVyxDQUM3QztvQkFFTix1Q0FBSyxTQUFTLEVBQUMsWUFBWSxFQUFDLEtBQUssRUFBRSxFQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUMsSUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FDOUI7b0JBRU4sdUNBQUssS0FBSyxFQUFFLEVBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLEVBQUUsU0FBUyxFQUFDLE1BQU07d0JBRWxFLDhCQUFDLGdCQUFNLElBQUMsRUFBRSxFQUFDLHlCQUF5QixFQUM1QixLQUFLLEVBQUMsU0FBUyxFQUNmLElBQUksRUFBQyxJQUFJLEVBQ1QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFOzRCQUV4QyxxQ0FBRyxTQUFTLEVBQUMsdUJBQXVCLEdBQUs7MkNBWXBDO3dCQUVULDhCQUFDLGdCQUFNLElBQUMsRUFBRSxFQUFDLG1CQUFtQixFQUN0QixLQUFLLEVBQUMsV0FBVyxFQUNqQixPQUFPLFFBQ1AsSUFBSSxFQUFDLElBQUksRUFDVCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFDcEMsU0FBUyxFQUFDLE1BQU07NEJBRXBCLHFDQUFHLFNBQVMsRUFBQywwQkFBMEIsR0FBSztxQ0FZdkMsQ0FFUCxDQUVKLENBRUosQ0FFSixDQUVULENBQUM7SUFFTixDQUFDO0NBRUo7QUEzR0QsOENBMkdDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IHJlYWN0L25vLW11bHRpLWNvbXA6IDAsIHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0xvZ2dlcn0gZnJvbSAnLi4vLi4vbG9nZ2VyL0xvZ2dlcic7XG5pbXBvcnQge0Ryb3Bkb3duSXRlbSwgRHJvcGRvd25NZW51LCBEcm9wZG93blRvZ2dsZSwgVW5jb250cm9sbGVkRHJvcGRvd259IGZyb20gJ3JlYWN0c3RyYXAnO1xuaW1wb3J0IHtTaW1wbGVUb29sdGlwfSBmcm9tICcuLi90b29sdGlwL1NpbXBsZVRvb2x0aXAnO1xuaW1wb3J0IHtVc2VySW5mb30gZnJvbSAnLi4vLi4vLi4vLi4vd2ViL2pzL2FwcHMvcmVwb3NpdG9yeS9hdXRoX2hhbmRsZXIvQXV0aEhhbmRsZXInO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdyZWFjdHN0cmFwL2xpYi9CdXR0b24nO1xuXG5jb25zdCBsb2cgPSBMb2dnZXIuY3JlYXRlKCk7XG5cbmV4cG9ydCBjbGFzcyBBY2NvdW50Q29udHJvbEJhciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8SVByb3BzLCBJU3RhdGU+IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBJUHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgfVxuXG4gICAgcHVibGljIHJlbmRlcigpIHtcblxuICAgICAgICBjb25zdCBVc2VySW1hZ2UgPSAoKSA9PiB7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnVzZXJJbmZvLnBob3RvVVJMKSB7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBzdHlsZT17e2hlaWdodDogJzEwMHB4Jywgd2lkdGg6ICcxMDBweCd9fT5cblxuICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cInJvdW5kZWQgYm9yZGVyIG0tYXV0b1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4SGVpZ2h0OiAnMTAwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aDogJzEwMHB4J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXt0aGlzLnByb3BzLnVzZXJJbmZvLnBob3RvVVJMfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPGRpdi8+O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIChcblxuICAgICAgICAgICAgPGRpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJ1xuICAgICAgICAgICAgICAgIH19PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGwtMCBwLTAgcHItMlwiPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8VXNlckltYWdlLz5cblxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMVwiPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7Zm9udFdlaWdodDogJ2JvbGQnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMucHJvcHMudXNlckluZm8uZGlzcGxheU5hbWUgfHwgJ0Fub255bW91cyd9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkXCIgc3R5bGU9e3tmb250U2l6ZTogXCIxNHB4XCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy51c2VySW5mby5lbWFpbCB8fCAnJ31cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2Jsb2NrJywgd2hpdGVTcGFjZTogJ25vd3JhcCd9fSBjbGFzc05hbWU9XCJtdC0yXCI+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGlkPVwiY2xvdWQtc3luYy1pbnZpdGUtdXNlcnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLm9uSW52aXRlKCl9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhcyBmYS11c2VyLXBsdXMgbXItMVwiPjwvaT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbnZpdGUgVXNlcnNcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Lyo8U2ltcGxlVG9vbHRpcCB0YXJnZXQ9XCJjbG91ZC1zeW5jLWludml0ZS11c2Vyc1wiKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKnNob3c9ezB9Ki99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKnBsYWNlbWVudD1cImJvdHRvbVwiPiovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qSW52aXRlIHVzZXJzIHRvIFBvbGFyLiBJZiB0aGV5IHNpZ24gdXAgYW5kKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Lyp1c2UgY2xvdWQgc3luYyB3ZSB3aWxsIGdpdmUgeW91IGEgZnJlZSBtb250aCovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qb2YgY2xvdWQgc3luYy4qL31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qPC9TaW1wbGVUb29sdGlwPiovfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGlkPVwiY2xvdWQtc3luYy1sb2dvdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMub25Mb2dvdXQoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1sLTFcIj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtc2lnbi1vdXQtYWx0IG1yLTFcIj48L2k+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nb3V0XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qPFNpbXBsZVRvb2x0aXAgdGFyZ2V0PVwiY2xvdWQtc3luYy1sb2dvdXRcIiovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LypzaG93PXswfSovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LypwbGFjZW1lbnQ9XCJsZWZ0XCI+Ki99XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKkxvZ291dCBvZiBQb2xhci4qL31cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Lyo8L1NpbXBsZVRvb2x0aXA+Ki99XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgKTtcblxuICAgIH1cblxufVxuXG5pbnRlcmZhY2UgSVByb3BzIHtcblxuICAgIHJlYWRvbmx5IHVzZXJJbmZvOiBVc2VySW5mbztcblxuICAgIHJlYWRvbmx5IG9uSW52aXRlOiAoKSA9PiB2b2lkO1xuXG4gICAgcmVhZG9ubHkgb25Mb2dvdXQ6ICgpID0+IHZvaWQ7XG5cbn1cblxuaW50ZXJmYWNlIElTdGF0ZSB7XG59XG4iXX0=