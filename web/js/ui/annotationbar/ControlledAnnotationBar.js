"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const reactstrap_1 = require("reactstrap");
class ControlledAnnotationBar extends React.Component {
    constructor(props) {
        super(props);
        this.dispatchOnHighlighted = this.dispatchOnHighlighted.bind(this);
        this.state = {};
    }
    render() {
        return (React.createElement("div", null,
            React.createElement("div", { className: "rounded p-1 annotationbar text-center", style: {} },
                React.createElement(reactstrap_1.Button, { size: "lg", type: "button", className: "btn p-1 m-1 annotationbar-btn", title: "", "aria-label": "", onClick: () => this.dispatchOnHighlighted('yellow'), style: {} },
                    React.createElement("span", { className: "fas fa-highlighter", "aria-hidden": "true", style: { color: 'rgba(255,255,0)' } })),
                React.createElement(reactstrap_1.Button, { size: "lg", type: "button", className: "btn p-1 m-1 annotationbar-btn", title: "", "aria-label": "", onClick: () => this.dispatchOnHighlighted('red'), style: {} },
                    React.createElement("span", { className: "fas fa-highlighter annotationbar-btn-highlighter", "aria-hidden": "true", style: { color: 'rgba(255,0,0)' } })),
                React.createElement(reactstrap_1.Button, { size: "lg", type: "button", className: "btn p-1 m-1 annotationbar-btn annotationbar-btn-highlighter", title: "", "aria-label": "", onClick: () => this.dispatchOnHighlighted('green'), style: {} },
                    React.createElement("span", { className: "fas fa-highlighter", "aria-hidden": "true", style: { color: 'rgba(0,255,0)' } })))));
    }
    dispatchOnHighlighted(highlightColor) {
        const highlightCreatedEvent = {
            activeSelection: this.props.activeSelection,
            highlightColor,
            pageNum: this.props.pageNum,
            annotationDescriptor: this.props.annotationDescriptor
        };
        this.props.onHighlighted(highlightCreatedEvent);
    }
}
exports.ControlledAnnotationBar = ControlledAnnotationBar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJvbGxlZEFubm90YXRpb25CYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDb250cm9sbGVkQW5ub3RhdGlvbkJhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsNkNBQStCO0FBQy9CLDJDQUFrQztBQVlsQyxNQUFhLHVCQUF3QixTQUFRLEtBQUssQ0FBQyxTQUF5QjtJQUV4RSxZQUFZLEtBQVU7UUFDbEIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWIsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkUsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFFcEIsQ0FBQztJQUVNLE1BQU07UUFDVCxPQUFPLENBQ0g7WUFFSSw2QkFBSyxTQUFTLEVBQUMsdUNBQXVDLEVBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBRTVELG9CQUFDLG1CQUFNLElBQUMsSUFBSSxFQUFDLElBQUksRUFDVCxJQUFJLEVBQUMsUUFBUSxFQUNiLFNBQVMsRUFBQywrQkFBK0IsRUFDekMsS0FBSyxFQUFDLEVBQUUsZ0JBQ0csRUFBRSxFQUNiLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLEVBQ25ELEtBQUssRUFBRSxFQUFHO29CQUVkLDhCQUFNLFNBQVMsRUFBQyxvQkFBb0IsaUJBQ2xCLE1BQU0sRUFDbEIsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLEdBQUcsQ0FFdkM7Z0JBRVQsb0JBQUMsbUJBQU0sSUFBQyxJQUFJLEVBQUMsSUFBSSxFQUNULElBQUksRUFBQyxRQUFRLEVBQ2IsU0FBUyxFQUFDLCtCQUErQixFQUN6QyxLQUFLLEVBQUMsRUFBRSxnQkFDRyxFQUFFLEVBQ2IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsRUFDaEQsS0FBSyxFQUFFLEVBQUc7b0JBRWQsOEJBQU0sU0FBUyxFQUFDLGtEQUFrRCxpQkFDaEQsTUFBTSxFQUNsQixLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsZUFBZSxFQUFDLEdBQUcsQ0FFbkM7Z0JBRVQsb0JBQUMsbUJBQU0sSUFBQyxJQUFJLEVBQUMsSUFBSSxFQUNULElBQUksRUFBQyxRQUFRLEVBQ2IsU0FBUyxFQUFDLDZEQUE2RCxFQUN2RSxLQUFLLEVBQUMsRUFBRSxnQkFDRyxFQUFFLEVBQ2IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUMsRUFDbEQsS0FBSyxFQUFFLEVBQUc7b0JBRWQsOEJBQU0sU0FBUyxFQUFDLG9CQUFvQixpQkFDbEIsTUFBTSxFQUNsQixLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsZUFBZSxFQUFDLEdBQUcsQ0FFbkMsQ0FFUCxDQUVKLENBQ1QsQ0FBQztJQUVOLENBQUM7SUFFTyxxQkFBcUIsQ0FBQyxjQUE4QjtRQUV4RCxNQUFNLHFCQUFxQixHQUEwQjtZQUNqRCxlQUFlLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlO1lBQzNDLGNBQWM7WUFDZCxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPO1lBQzNCLG9CQUFvQixFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsb0JBQW9CO1NBQ3hELENBQUM7UUFFRixJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBRXBELENBQUM7Q0FFSjtBQS9FRCwwREErRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQge0FjdGl2ZVNlbGVjdGlvbn0gZnJvbSAnLi4vcG9wdXAvQWN0aXZlU2VsZWN0aW9ucyc7XG5pbXBvcnQge0lFdmVudERpc3BhdGNoZXJ9IGZyb20gJy4uLy4uL3JlYWN0b3IvU2ltcGxlUmVhY3Rvcic7XG5pbXBvcnQge0Fubm90YXRpb25EZXNjcmlwdG9yfSBmcm9tICcuLi8uLi9tZXRhZGF0YS9Bbm5vdGF0aW9uRGVzY3JpcHRvcic7XG5pbXBvcnQge0hpZ2hsaWdodENyZWF0ZWRFdmVudH0gZnJvbSAnLi4vLi4vY29tbWVudHMvcmVhY3QvSGlnaGxpZ2h0Q3JlYXRlZEV2ZW50JztcbmltcG9ydCB7SGlnaGxpZ2h0Q29sb3J9IGZyb20gJy4uLy4uL21ldGFkYXRhL0Jhc2VIaWdobGlnaHQnO1xuaW1wb3J0IHtQb3B1cFN0YXRlRXZlbnR9IGZyb20gJy4uL3BvcHVwL1BvcHVwU3RhdGVFdmVudCc7XG5pbXBvcnQge0V2ZW50TGlzdGVuZXJ9IGZyb20gJy4uLy4uL3JlYWN0b3IvRXZlbnRMaXN0ZW5lcic7XG5cbi8qKlxuICogQW4gYW5ub3RhdGlvbiBiYXIgdGhhdCBpcyBwbGFjZWQgZXhhY3RseS5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbnRyb2xsZWRBbm5vdGF0aW9uQmFyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PElQcm9wcywgSVN0YXRlPiB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogYW55KSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLmRpc3BhdGNoT25IaWdobGlnaHRlZCA9IHRoaXMuZGlzcGF0Y2hPbkhpZ2hsaWdodGVkLmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHt9O1xuXG4gICAgfVxuXG4gICAgcHVibGljIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdW5kZWQgcC0xIGFubm90YXRpb25iYXIgdGV4dC1jZW50ZXJcIiBzdHlsZT17e319PlxuXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gc2l6ZT1cImxnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gcC0xIG0tMSBhbm5vdGF0aW9uYmFyLWJ0blwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuZGlzcGF0Y2hPbkhpZ2hsaWdodGVkKCd5ZWxsb3cnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB9fT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmFzIGZhLWhpZ2hsaWdodGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogJ3JnYmEoMjU1LDI1NSwwKScgfX0vPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gc2l6ZT1cImxnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gcC0xIG0tMSBhbm5vdGF0aW9uYmFyLWJ0blwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuZGlzcGF0Y2hPbkhpZ2hsaWdodGVkKCdyZWQnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB9fT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmFzIGZhLWhpZ2hsaWdodGVyIGFubm90YXRpb25iYXItYnRuLWhpZ2hsaWdodGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e2NvbG9yOiAncmdiYSgyNTUsMCwwKSd9fS8+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwibGdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBwLTEgbS0xIGFubm90YXRpb25iYXItYnRuIGFubm90YXRpb25iYXItYnRuLWhpZ2hsaWdodGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5kaXNwYXRjaE9uSGlnaGxpZ2h0ZWQoJ2dyZWVuJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgfX0+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZhcyBmYS1oaWdobGlnaHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tjb2xvcjogJ3JnYmEoMCwyNTUsMCknfX0vPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkaXNwYXRjaE9uSGlnaGxpZ2h0ZWQoaGlnaGxpZ2h0Q29sb3I6IEhpZ2hsaWdodENvbG9yKSB7XG5cbiAgICAgICAgY29uc3QgaGlnaGxpZ2h0Q3JlYXRlZEV2ZW50OiBIaWdobGlnaHRDcmVhdGVkRXZlbnQgPSB7XG4gICAgICAgICAgICBhY3RpdmVTZWxlY3Rpb246IHRoaXMucHJvcHMuYWN0aXZlU2VsZWN0aW9uLFxuICAgICAgICAgICAgaGlnaGxpZ2h0Q29sb3IsXG4gICAgICAgICAgICBwYWdlTnVtOiB0aGlzLnByb3BzLnBhZ2VOdW0sXG4gICAgICAgICAgICBhbm5vdGF0aW9uRGVzY3JpcHRvcjogdGhpcy5wcm9wcy5hbm5vdGF0aW9uRGVzY3JpcHRvclxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMucHJvcHMub25IaWdobGlnaHRlZChoaWdobGlnaHRDcmVhdGVkRXZlbnQpO1xuXG4gICAgfVxuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgQW5ub3RhdGlvbkJhckNhbGxiYWNrcyB7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgQWN0aXZlU2VsZWN0aW9uIGluIHRoZSBicm93c2VyIHRoYXQncyBiZWluZyBzZWxlY3RlZCBieSB0aGUgdXNlci5cbiAgICAgKi9cbiAgICByZWFkb25seSBhY3RpdmVTZWxlY3Rpb246IEFjdGl2ZVNlbGVjdGlvbjtcblxuICAgIHJlYWRvbmx5IHR5cGU6IEFubm90YXRpb25CYXJUYXJnZXRUeXBlO1xuXG4gICAgcmVhZG9ubHkgcGFnZU51bTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogQW4gb3B0aW9uYWwgYW5ub3RhdGlvbkRlc2NyaXB0b3IgaWYgdGhpcyBpcyBhbiBleGlzdGluZyBhbm5vdGF0aW9uLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGFubm90YXRpb25EZXNjcmlwdG9yPzogQW5ub3RhdGlvbkRlc2NyaXB0b3I7XG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJU3RhdGUge1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFubm90YXRpb25CYXJDYWxsYmFja3Mge1xuICAgIC8vIGNhbGxlZCB3aGVuIHRoZSBjb21tZW50IGJ1dHRvbiBpcyBjbGlja2VkLlxuICAgIG9uSGlnaGxpZ2h0ZWQ6IE9uSGlnaGxpZ2h0ZWRDYWxsYmFjaztcbn1cblxuZXhwb3J0IHR5cGUgT25IaWdobGlnaHRlZENhbGxiYWNrXG4gICAgPSAoaGlnaGxpZ2h0Q3JlYXRlZEV2ZW50OiBIaWdobGlnaHRDcmVhdGVkRXZlbnQpID0+IHZvaWQ7XG5cbi8qKlxuICogVGhlIHR5cGUgb2YgdGhlIHNlbGVjdGlvbi4gIEEgJ3JhbmdlJyBpcyBqdXN0IGEgdXNlciBoaWdobGlnaHQuICBPdGhlcndpc2VcbiAqIGl0J3MgZWl0aGVyIGEgcHJldmlvdXNseSBjcmVhdGVkICd0ZXh0LWhpZ2hsaWdodCcgb3IgJ2FyZWEtaGlnaGxpZ2h0XG4gKi9cbmV4cG9ydCB0eXBlIEFubm90YXRpb25CYXJUYXJnZXRUeXBlID0gJ3JhbmdlJyB8ICd0ZXh0LWhpZ2hsaWdodCcgfCAnYXJlYS1oaWdobGlnaHQnO1xuIl19